[{"C:\\Projects\\CvManager\\cv-manager\\src\\index.js":"1","C:\\Projects\\CvManager\\cv-manager\\src\\App.js":"2","C:\\Projects\\CvManager\\cv-manager\\src\\utills\\menu.js":"3","C:\\Projects\\CvManager\\cv-manager\\src\\consts\\measures.js":"4","C:\\Projects\\CvManager\\cv-manager\\src\\components\\Nav\\Nav.js":"5","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CvPanel\\CvPanel.js":"6","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CvPanel\\Cv\\Cv.js":"7","C:\\Projects\\CvManager\\cv-manager\\src\\utills\\cv.js":"8","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CoverPanel\\CoverPanel.js":"9","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CoverPanel\\Cover\\Cover.js":"10","C:\\Projects\\CvManager\\cv-manager\\src\\utills\\cover.js":"11","C:\\Projects\\CvManager\\cv-manager\\src\\components\\TemplatePanel\\TemplatePanel.js":"12","C:\\Projects\\CvManager\\cv-manager\\src\\actions\\cvActions.js":"13","C:\\Projects\\CvManager\\cv-manager\\src\\consts\\actionTypes.js":"14","C:\\Projects\\CvManager\\cv-manager\\src\\api\\api.js":"15","C:\\Projects\\CvManager\\cv-manager\\src\\Store.js":"16","C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\coverReducer.js":"17","C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\templateReducer.js":"18","C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\cvReducer.js":"19","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CvPanel\\NewCvForm.js":"20","C:\\Projects\\CvManager\\cv-manager\\src\\actions\\coverActions.js":"21","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CoverPanel\\NewCoverForm.js":"22","C:\\Projects\\CvManager\\cv-manager\\src\\consts\\colors.js":"23","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\InputTextField.js":"24","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\MyButton.js":"25","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\InputTextArea.js":"26","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\DocViewer.js":"27","C:\\Projects\\CvManager\\cv-manager\\src\\actions\\optionsActions.js":"28","C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\optionsReducer.js":"29","C:\\Projects\\CvManager\\cv-manager\\src\\styles\\panelStyle.js":"30","C:\\Projects\\CvManager\\cv-manager\\src\\components\\TemplatePanel\\TemplateForm.js":"31","C:\\Projects\\CvManager\\cv-manager\\src\\components\\TemplatePanel\\Template\\Template.js":"32","C:\\Projects\\CvManager\\cv-manager\\src\\actions\\templateActions.js":"33","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormSelect.js":"34","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormSelectAC.js":"35","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormInput.js":"36","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CvPanel\\CvForm.js":"37","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FileInput.js":"38","C:\\Projects\\CvManager\\cv-manager\\src\\consts\\structs.js":"39","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormTitle.js":"40","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormFileInput.js":"41","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CoverPanel\\CoverForm.js":"42","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\DocListItem.js":"43","C:\\Projects\\CvManager\\cv-manager\\src\\styles\\formStyle.js":"44","C:\\Projects\\CvManager\\cv-manager\\src\\components\\SendMailPage\\SendMailPage.js":"45","C:\\Projects\\CvManager\\cv-manager\\src\\components\\SendMailPage\\SendForm.js":"46","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\RichTextEditor.js":"47","C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\userReducer.js":"48","C:\\Projects\\CvManager\\cv-manager\\src\\utills\\editorUtils.js":"49"},{"size":382,"mtime":1609755160917,"results":"50","hashOfConfig":"51"},{"size":973,"mtime":1610462996562,"results":"52","hashOfConfig":"51"},{"size":660,"mtime":1610460310354,"results":"53","hashOfConfig":"51"},{"size":239,"mtime":1610179604113,"results":"54","hashOfConfig":"51"},{"size":5211,"mtime":1610460087135,"results":"55","hashOfConfig":"51"},{"size":4133,"mtime":1610446915696,"results":"56","hashOfConfig":"51"},{"size":4322,"mtime":1610443576281,"results":"57","hashOfConfig":"51"},{"size":763,"mtime":1609527268465,"results":"58","hashOfConfig":"51"},{"size":3328,"mtime":1610813270668,"results":"59","hashOfConfig":"51"},{"size":3689,"mtime":1610813598493,"results":"60","hashOfConfig":"51"},{"size":432,"mtime":1609580427022,"results":"61","hashOfConfig":"51"},{"size":3625,"mtime":1610446915564,"results":"62","hashOfConfig":"51"},{"size":2415,"mtime":1610352450482,"results":"63","hashOfConfig":"51"},{"size":930,"mtime":1610304892179,"results":"64","hashOfConfig":"51"},{"size":2128,"mtime":1610734254405,"results":"65","hashOfConfig":"51"},{"size":667,"mtime":1610720045636,"results":"66","hashOfConfig":"51"},{"size":1327,"mtime":1610650586680,"results":"67","hashOfConfig":"51"},{"size":1266,"mtime":1610304869437,"results":"68","hashOfConfig":"51"},{"size":1187,"mtime":1610200570308,"results":"69","hashOfConfig":"51"},{"size":8091,"mtime":1610210668712,"results":"70","hashOfConfig":"51"},{"size":1263,"mtime":1610650575092,"results":"71","hashOfConfig":"51"},{"size":5166,"mtime":1610197933051,"results":"72","hashOfConfig":"51"},{"size":250,"mtime":1610380323350,"results":"73","hashOfConfig":"51"},{"size":1560,"mtime":1610372631038,"results":"74","hashOfConfig":"51"},{"size":1804,"mtime":1610126015904,"results":"75","hashOfConfig":"51"},{"size":1570,"mtime":1610178927586,"results":"76","hashOfConfig":"51"},{"size":375,"mtime":1609940878827,"results":"77","hashOfConfig":"51"},{"size":197,"mtime":1610110765681,"results":"78","hashOfConfig":"51"},{"size":468,"mtime":1610719877688,"results":"79","hashOfConfig":"51"},{"size":710,"mtime":1610714233063,"results":"80","hashOfConfig":"51"},{"size":4540,"mtime":1610711784345,"results":"81","hashOfConfig":"51"},{"size":4013,"mtime":1610350273523,"results":"82","hashOfConfig":"51"},{"size":1337,"mtime":1610269999167,"results":"83","hashOfConfig":"51"},{"size":2923,"mtime":1610445862873,"results":"84","hashOfConfig":"51"},{"size":4333,"mtime":1610289287737,"results":"85","hashOfConfig":"51"},{"size":2458,"mtime":1610818972971,"results":"86","hashOfConfig":"51"},{"size":5248,"mtime":1610711764603,"results":"87","hashOfConfig":"51"},{"size":2348,"mtime":1610380350690,"results":"88","hashOfConfig":"51"},{"size":160,"mtime":1610371345224,"results":"89","hashOfConfig":"51"},{"size":2516,"mtime":1610442208586,"results":"90","hashOfConfig":"51"},{"size":1571,"mtime":1610794422754,"results":"91","hashOfConfig":"51"},{"size":4683,"mtime":1610821641657,"results":"92","hashOfConfig":"51"},{"size":4696,"mtime":1610463907562,"results":"93","hashOfConfig":"51"},{"size":465,"mtime":1610447186523,"results":"94","hashOfConfig":"51"},{"size":6497,"mtime":1610818269777,"results":"95","hashOfConfig":"51"},{"size":4343,"mtime":1610718100644,"results":"96","hashOfConfig":"51"},{"size":6255,"mtime":1610813270582,"results":"97","hashOfConfig":"51"},{"size":319,"mtime":1610729648011,"results":"98","hashOfConfig":"51"},{"size":533,"mtime":1610821745614,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"wg62lo",{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"102"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":13,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":8,"source":"155","usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"102"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"102"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"102"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"102"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\CvManager\\cv-manager\\src\\index.js",[],["223","224"],"C:\\Projects\\CvManager\\cv-manager\\src\\App.js",["225"],"import './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport Nav from './components/Nav/Nav.js';\nimport CvPanel from './components/CvPanel/CvPanel.js';\nimport CoverPanel from './components/CoverPanel/CoverPanel.js';\nimport TemplatePanel from './components/TemplatePanel/TemplatePanel.js';\nimport SendMailPage from './components/SendMailPage/SendMailPage.js';\n\nfunction App() {\n  return (\n    <div className='app'>\n      {/* <Container> */}\n      <Nav />\n      <Switch>\n        <Route exact path='/cv' render={(routeParams) => <CvPanel {...routeParams} />} />\n        <Route exact path='/cover' render={(routeParams) => <CoverPanel {...routeParams} />} />\n        <Route exact path='/template' render={(routeParams) => <TemplatePanel {...routeParams} />} />\n        <Route exact path='/' render={() => <SendMailPage />} />\n      </Switch>\n      {/* </Container> */}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Projects\\CvManager\\cv-manager\\src\\utills\\menu.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\consts\\measures.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\Nav\\Nav.js",["226","227"],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { getMenuItems } from '../../utills/menu.js';\r\nimport { SIDE_PANEL_WIDTH_WIDE, SIDE_PANEL_WIDTH_SHORT } from '../../consts/measures.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { openSidePanel, closeSidePanel } from '../../actions/optionsActions.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  appBar: {\r\n    minHeight: '64px',\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n\r\n  appBarShift: {\r\n    marginLeft: SIDE_PANEL_WIDTH_WIDE,\r\n    width: `calc(100% - ${SIDE_PANEL_WIDTH_WIDE}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    // [theme.breakpoints.down('xs')]: {\r\n    //   width: `calc(100% - ${SIDE_PANEL_WIDTH_SHORT})`,\r\n    // },\r\n  },\r\n\r\n  drawer: {\r\n    width: SIDE_PANEL_WIDTH_WIDE,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n\r\n  drawerOpen: {\r\n    width: SIDE_PANEL_WIDTH_WIDE,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    // [theme.breakpoints.down('xs')]: {\r\n    //   width: SIDE_PANEL_WIDTH_SHORT,\r\n    // },\r\n  },\r\n\r\n  drawerClose: {\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: SIDE_PANEL_WIDTH_SHORT,\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst Nav = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const open = useSelector((state) => state.options.isSidePanelOpen);\r\n  //const [open, setOpen] = useState(false);\r\n  const [menuItems] = useState(getMenuItems());\r\n\r\n  const handleDrawerOpen = () => {\r\n    //setOpen(true);\r\n    dispatch(openSidePanel);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    //setOpen(false);\r\n    dispatch(closeSidePanel);\r\n  };\r\n\r\n  const menuListItems = menuItems.map((item) => (\r\n    <ListItem button key={item.name} component={Link} to={item.to}>\r\n      <ListItemIcon>{item.icon}</ListItemIcon>\r\n      <ListItemText primary={item.name} />\r\n    </ListItem>\r\n  ));\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position='fixed'\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar className={classes.header}>\r\n          <IconButton\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n            onClick={handleDrawerOpen}\r\n            edge='start'\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant='h6' noWrap>\r\n            Cv Manager\r\n          </Typography>\r\n          <Button color='inherit'>Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer\r\n        variant='permanent'\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{menuListItems}</List>\r\n        <Divider />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CvPanel\\CvPanel.js",["228","229","230","231","232","233","234","235","236"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { addNewCv, getAllCvs, deleteMyCv, editMyCv } from '../../actions/cvActions.js';\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Container from '@material-ui/core/Container';\r\nimport clsx from 'clsx';\r\n\r\nimport Cv from './Cv/Cv.js';\r\nimport CvForm from './CvForm.js';\r\nimport DocViewer from '../common/DocViewer.js';\r\nimport MyButton from '../common/MyButton.js';\r\nimport { SIDE_PANEL_WIDTH_WIDE, SIDE_PANEL_WIDTH_SHORT, HEADER_MARGIN } from '../../consts/measures.js';\r\nimport styles from '../../styles/panelStyle.js';\r\nimport DocListItem from '../common/DocListItem.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nconst CvPanel = ({ classes }) => {\r\n  const myClasses = useStyles();\r\n  const dispatch = useDispatch();\r\n  const items = useSelector((state) => [...state.cv.items], shallowEqual);\r\n  const isSidePanelOpen = useSelector((state) => state.options.isSidePanelOpen);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [editItem, setEditItem] = useState(null);\r\n  const [openForm, setOpenForm] = useState(false);\r\n  // const file = useSelector((state) => state.cv.selectedItem.file);\r\n  // const [fileOpen, setFileOpen] = useState(false);\r\n\r\n  const saveNewCv = async (name, description, file) => {\r\n    //save edited instance\r\n    if (isEditMode) {\r\n      await dispatch(editMyCv({ id: editItem.id, name: name, description: description, file: file }));\r\n      setIsEditMode(false);\r\n      setOpenForm(false);\r\n      setEditItem(null);\r\n    }\r\n    //save new instance\r\n    else dispatch(addNewCv({ name: name, description: description, file: file }));\r\n  };\r\n\r\n  const deleteCv = (id) => {\r\n    dispatch(deleteMyCv(id));\r\n  };\r\n\r\n  const openFormHandler = (e) => {\r\n    setOpenForm(true); //!openForm\r\n  };\r\n\r\n  const closeFormHandler = (e) => {\r\n    setOpenForm(false);\r\n  };\r\n\r\n  // const editCv = (id, name, description, file) => {\r\n  const editCv = (id) => {\r\n    const item = items.find((item) => item.id === id);\r\n    setEditItem(item);\r\n    // setEditItem({ id: id, name: name, description: description, file: file });\r\n    setIsEditMode(true);\r\n    setOpenForm(true);\r\n  };\r\n\r\n  //display files on init\r\n  useEffect(async () => {\r\n    await dispatch(getAllCvs());\r\n  }, []);\r\n\r\n  const cvItems = items.map((cv) => (\r\n    <DocListItem\r\n      key={cv.id}\r\n      id={cv.id}\r\n      name={cv.name}\r\n      description={cv.description}\r\n      type={cv.type}\r\n      file={cv.file}\r\n      actions={['delete', 'edit', 'open']}\r\n      onEdit={editCv}\r\n      onDelete={deleteCv}\r\n    />\r\n\r\n    // <Cv\r\n    //   key={cv.id}\r\n    //   id={cv.id}\r\n    //   name={cv.name}\r\n    //   description={cv.description}\r\n    //   type={cv.type}\r\n    //   file={cv.file}\r\n    //   editCv={editCv}\r\n    //   deleteCv={deleteCv}\r\n    //   // openFile={openFile}\r\n    // />\r\n  ));\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.expanded]: isSidePanelOpen,\r\n      })}\r\n    >\r\n      <Container>\r\n        <List>{cvItems}</List>\r\n        <div className={classes.addButtonContainer}>\r\n          {!openForm && <MyButton name='Add cv' theme='light' onClick={openFormHandler} />}\r\n        </div>\r\n        {openForm && (\r\n          <CvForm\r\n            initName={editItem ? editItem.name : ''}\r\n            initDescription={editItem ? editItem.description : ''}\r\n            initFile={editItem ? editItem.description : ''}\r\n            mode={isEditMode ? 'edit' : 'new'}\r\n            saveCv={saveNewCv}\r\n            closeForm={closeFormHandler}\r\n          />\r\n        )}\r\n        {/* {fileOpen && <DocViewer source={file} />} */}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(CvPanel);\r\n\r\n{\r\n  /* <Form\r\nmode={isEditMode ? 'edit' : 'new'}\r\ninitName={editItem ? editItem.name : ''}\r\ninitDescription={editItem ? editItem.description : ''}\r\ninitFile={editItem ? editItem.file : null}\r\nsaveCv={saveNewCv}\r\ndeleteCv={deleteCv}\r\n/> */\r\n}\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CvPanel\\Cv\\Cv.js",["237","238","239","240","241"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport clsx from 'clsx';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { LIGHT_BLUE, DARK_BLUE, LIGHT, DARK, LIME } from '../../../consts/colors.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiListItem-container': {\r\n      background: LIGHT,\r\n      maxWidth: '100%',\r\n      height: '100px',\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      margin: 0,\r\n      padding: 0,\r\n      marginBottom: '5px',\r\n      borderRadius: '2px',\r\n      '& .MuiListItemText-root': {\r\n        paddingRight: '80px',\r\n        paddingLeft: '10px',\r\n        [theme.breakpoints.down('sm')]: {\r\n          paddingRight: '10px',\r\n        },\r\n      },\r\n\r\n      '& .MuiAvatar-root': {\r\n        backgroundColor: DARK_BLUE,\r\n        width: '60px',\r\n        height: '60px',\r\n        '& svg': {\r\n          fontSize: '55px',\r\n        },\r\n      },\r\n\r\n      [theme.breakpoints.down('sm')]: {\r\n        height: '200px',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        '& .MuiListItemSecondaryAction-root': {\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        },\r\n        '& .MuiAvatar-root': {\r\n          width: '70px',\r\n          height: '70px',\r\n          '& svg': {\r\n            fontSize: '50px',\r\n          },\r\n        },\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        '& .MuiListItemAvatar-root': {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n    '& svg': {\r\n      color: DARK_BLUE,\r\n    },\r\n  },\r\n\r\n  iconButton: {\r\n    '& svg': {\r\n      fontSize: '32px',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Cv = ({ id, name, type, description, file, editCv, deleteCv, openFile }) => {\r\n  const classes = useStyles(useStyles());\r\n\r\n  const onDeleteClick = (e) => {\r\n    deleteCv(id);\r\n  };\r\n\r\n  const onEditClick = (e) => {\r\n    editCv(id, name, description, file);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            {/* <FolderIcon /> */}\r\n            {type}\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          style={{ wordBreak: 'break-all' }}\r\n          primary={\r\n            <React.Fragment>\r\n              <Typography component='span' variant='h6' color='secondary' className={classes.descriptionText}>\r\n                {name}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography component='span' variant='body2' className={classes.descriptionText}>\r\n                {description}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n        <ListItemSecondaryAction>\r\n          <IconButton className={clsx(classes.iconButton)} edge='end' aria-label='edit' onClick={onEditClick}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            className={clsx(classes.iconButton, classes.deleteIconButton)}\r\n            edge='end'\r\n            aria-label='delete'\r\n            onClick={onDeleteClick}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            className={clsx(classes.iconButton, classes.fileIconButton)}\r\n            href={file}\r\n            //target='_blank'\r\n            rel='noopener noreferrer'\r\n            edge='end'\r\n            aria-label='file'\r\n            component='a'\r\n          >\r\n            <FileIcon />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cv;\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\utills\\cv.js",[],["242","243"],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\CoverPanel\\CoverPanel.js",["244","245","246","247","248","249","250","251"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport List from '@material-ui/core/List';\r\nimport Cover from './Cover/Cover.js';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { addNewCover, getAllCovers, deleteMyCover, editMyCover } from '../../actions/coverActions.js';\r\nimport Container from '@material-ui/core/Container';\r\nimport Form from './NewCoverForm.js';\r\nimport MyButton from '../common/MyButton.js';\r\nimport clsx from 'clsx';\r\nimport CoverForm from './CoverForm.js';\r\nimport { SIDE_PANEL_WIDTH_WIDE, HEADER_MARGIN } from '../../consts/measures.js';\r\nimport styles from '../../styles/panelStyle.js';\r\nimport { convertJsonToEditorState, convertEditorContentToJson } from '../../utills/editorUtils.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nconst CoverPanel = ({ classes }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const items = useSelector((state) => state.cover.items);\r\n  const isSidePanelOpen = useSelector((state) => state.options.isSidePanelOpen);\r\n  const [openForm, setOpenForm] = useState(false);\r\n  const [coverExpanded, setCoverExpanded] = useState('');\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [editItem, setEditItem] = useState(null);\r\n\r\n  const handleChange = (id) => (event, newExpanded) => {\r\n    setCoverExpanded(newExpanded ? id : null);\r\n  };\r\n\r\n  const openFormHandler = (e) => {\r\n    setOpenForm(true);\r\n  };\r\n\r\n  const closeFormHandler = (e) => {\r\n    setOpenForm(false);\r\n  };\r\n\r\n  const saveCover = async (name, content) => {\r\n    if (isEditMode) {\r\n      dispatch(editMyCover({ id: editItem.id, name: name, content: content }));\r\n      setIsEditMode(false);\r\n      setOpenForm(false);\r\n      setEditItem(null);\r\n    } else dispatch(addNewCover({ name: name, content: content }));\r\n  };\r\n\r\n  const deleteCover = (id) => {\r\n    dispatch(deleteMyCover(id));\r\n  };\r\n\r\n  const editCover = (id, name, content) => {\r\n    setEditItem({ id: id, name: name, content: content });\r\n    setIsEditMode(true);\r\n    setOpenForm(true);\r\n    // dispatch(editMyCover({ id: id, content: content }));\r\n  };\r\n\r\n  //display my files on init\r\n  useEffect(() => {\r\n    dispatch(getAllCovers());\r\n  }, []);\r\n\r\n  let covers = items.map((cover) => (\r\n    <Cover\r\n      key={cover.id}\r\n      id={cover.id}\r\n      name={cover.name}\r\n      content={cover.content}\r\n      expanded={coverExpanded}\r\n      deleteCover={deleteCover}\r\n      editCover={editCover}\r\n      handleChange={handleChange}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.expanded]: isSidePanelOpen,\r\n      })}\r\n    >\r\n      <Container maxWidth='lg'>\r\n        <div>{covers}</div>\r\n        <div className={classes.addButtonContainer}>\r\n          {!openForm && <MyButton name='Add cover' theme='light' onClick={openFormHandler} />}\r\n        </div>\r\n        {openForm && (\r\n          <CoverForm\r\n            initName={editItem ? editItem.name : ''}\r\n            initContent={editItem ? editItem.content : ''}\r\n            mode={isEditMode ? 'edit' : 'new'}\r\n            saveCover={saveCover}\r\n            closeForm={closeFormHandler}\r\n          />\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(CoverPanel);\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CoverPanel\\Cover\\Cover.js",["252","253","254","255","256","257"],"C:\\Projects\\CvManager\\cv-manager\\src\\utills\\cover.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\TemplatePanel\\TemplatePanel.js",["258","259","260","261","262","263"],"import React, { useState, useEffect } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport MyButton from '../common/MyButton.js';\r\nimport List from '@material-ui/core/List';\r\nimport { getAllMyTemplates, editMyTemplate, addNewTemplate, deleteMyTemplate } from '../../actions/templateActions.js';\r\nimport clsx from 'clsx';\r\nimport panelStyle from '../../styles/panelStyle.js';\r\nimport Template from './Template/Template.js';\r\nimport TemplateForm from './TemplateForm.js';\r\nimport DocListItem from '../common/DocListItem.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n\r\nconst TemplatePanel = ({ classes }) => {\r\n  //const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const isSidePanelOpen = useSelector((state) => state.options.isSidePanelOpen);\r\n  const items = useSelector((state) => state.template.items);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [editItem, setEditItem] = useState(null);\r\n  const [openForm, setOpenForm] = useState(false);\r\n\r\n  const openFormHandler = (e) => {\r\n    setOpenForm(true);\r\n  };\r\n\r\n  const saveTemplate = async (name, description, cv, cover) => {\r\n    //save edited instance\r\n    if (isEditMode) {\r\n      await dispatch(editMyTemplate({ id: editItem.id, name: name, description: description, cv: cv, cover: cover }));\r\n      setIsEditMode(false);\r\n      setOpenForm(false);\r\n      setEditItem(null);\r\n    }\r\n    //save new instance\r\n    else dispatch(addNewTemplate({ name: name, description: description, cv: cv, cover: cover }));\r\n  };\r\n\r\n  const deleteTemplate = (id) => {\r\n    dispatch(deleteMyTemplate(id));\r\n  };\r\n\r\n  const closeFormHandler = (e) => {\r\n    setOpenForm(false);\r\n  };\r\n\r\n  const editTemplate = (id) => {\r\n    const item = items.find((item) => item.id === id);\r\n    setEditItem(item);\r\n    setIsEditMode(true);\r\n    setOpenForm(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllMyTemplates());\r\n  }, []);\r\n\r\n  const templateItems = items.map((template) => (\r\n    <DocListItem\r\n      key={template.id}\r\n      id={template.id}\r\n      name={template.name}\r\n      description={template.description}\r\n      actions={['delete', 'edit']}\r\n      onEdit={editTemplate}\r\n      onDelete={deleteTemplate}\r\n    />\r\n    // <Template\r\n    //   key={item.id}\r\n    //   id={item.id}\r\n    //   name={item.name}\r\n    //   description={item.description}\r\n    //   cv={item.cv}\r\n    //   cover={item.cover}\r\n    //   editTemplate={editTemplate}\r\n    //   deleteTemplate={deleteTemplate}\r\n    // />\r\n  ));\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.expanded]: isSidePanelOpen,\r\n      })}\r\n    >\r\n      <Container>\r\n        <List>{templateItems}</List>\r\n        <div className={classes.addButtonContainer}>\r\n          {!openForm && <MyButton name='Add template' theme='light' onClick={openFormHandler} />}\r\n        </div>\r\n        {openForm && (\r\n          <TemplateForm\r\n            mode={isEditMode ? 'edit' : 'new'}\r\n            initName={editItem ? editItem.name : ''}\r\n            initDescription={editItem ? editItem.description : ''}\r\n            initCvId={editItem ? editItem.cv : ''}\r\n            initCoverId={editItem ? editItem.cover : ''}\r\n            saveTemplate={saveTemplate}\r\n            closeForm={closeFormHandler}\r\n            //deleteTemplate={deleteTemplate}\r\n          />\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(panelStyle, { withTheme: true })(TemplatePanel);\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\actions\\cvActions.js",["264"],"import { ADD_MY_CV, UPDATE_MY_CVS, DELETE_MY_CV, UPDATE_SELECTED_CV, UPDATE_MY_CV } from '../consts/actionTypes.js';\r\nimport * as api from '../api/api.js';\r\n\r\nconst updateCvs = (items) => ({ type: UPDATE_MY_CVS, payload: items });\r\nconst updateEditedCv = (item) => ({ type: UPDATE_MY_CV, payload: item });\r\nconst addCv = (item) => ({ type: ADD_MY_CV, payload: item });\r\nconst deleteCv = (id) => ({ type: DELETE_MY_CV, payload: id });\r\n\r\nexport const updateMyCvs = () => async (dispatch) => {\r\n  const response = await api.getAllCv();\r\n  if (response.status === 200) {\r\n    await dispatch(updateCvs(response.data.items));\r\n  }\r\n};\r\n\r\nexport const addNewCv = (data) => async (dispatch) => {\r\n  let formData = new FormData();\r\n  formData.append('file', data.file);\r\n  formData.append('name', data.name);\r\n  formData.append('description', data.description);\r\n  const response = await api.addCv(formData);\r\n  if (response.status === 200) {\r\n    await dispatch(\r\n      addCv({\r\n        id: response.data.data.id,\r\n        name: response.data.data.name,\r\n        description: response.data.data.description,\r\n        file: response.data.data.file,\r\n        type: response.data.data.type,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const deleteMyCv = (id) => async (dispatch) => {\r\n  const response = await api.deleteCv(id);\r\n  if (response.status === 200) {\r\n    await dispatch(deleteCv(response.data.id));\r\n  }\r\n};\r\n\r\n// export const getSelectedCv = (id) => async (dispatch) => {\r\n//   const response = await api.getCv(id);\r\n//   if (response.status === 200) {\r\n//     await dispatch(updateMyCvs(response.data.item));\r\n//   }\r\n// };\r\n\r\nexport const editMyCv = (data) => async (dispatch) => {\r\n  let dataToSend = {};\r\n  //file was not changed.File already in db and data.file is link to file.\r\n  if (typeof data.file === 'string') {\r\n    dataToSend = data;\r\n  }\r\n  //new file selected.data.file is File object.\r\n  else if (typeof data.file === 'object') {\r\n    dataToSend = new FormData();\r\n    dataToSend.append('file', data.file);\r\n    dataToSend.append('id', data.id);\r\n    dataToSend.append('name', data.name);\r\n    dataToSend.append('description', data.description);\r\n  }\r\n  //Ther was some error in process.\r\n  else {\r\n    console.log('Bad selected file!'); //DEV\r\n  }\r\n\r\n  const response = await api.updateCv(dataToSend);\r\n\r\n  if (response.status === 200) {\r\n    await dispatch(updateEditedCv(response.data.item));\r\n  }\r\n};\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\consts\\actionTypes.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\api\\api.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\Store.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\coverReducer.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\templateReducer.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\cvReducer.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\CvPanel\\NewCvForm.js",["265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport Container from '@material-ui/core/Container';\r\nimport FileBase64 from 'react-file-base64';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport UploadIcon from '@material-ui/icons/Publish';\r\nimport InputTextField from '../common/InputTextField.js';\r\nimport MyButton from '../common/MyButton.js';\r\nimport clsx from 'clsx';\r\nimport { LIGHT_BLUE, DARK_BLUE, LIGHT, DARK, RED_ERROR } from '../../consts/colors.js';\r\nimport { MAX_NAME_LENGTH, MAX_DESCRIPTION_LENGTH } from '../../consts/measures.js';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start',\r\n    marginTop: '50px',\r\n    marginBottom: '50px',\r\n    padding: 0,\r\n  },\r\n  formTitle: {\r\n    width: '100%',\r\n    color: 'white',\r\n    textAlign: 'left',\r\n    marginTop: '50px',\r\n    marginBottom: '10px',\r\n  },\r\n  fileButton: {\r\n    background: LIGHT,\r\n    margin: '10px 0',\r\n  },\r\n  submitButton: {\r\n    margin: '10px 0',\r\n  },\r\n  inputContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n  },\r\n  fileInput: {\r\n    display: 'none',\r\n  },\r\n  inputStatusIcon: {\r\n    '& svg': {\r\n      fontSize: '45px',\r\n      fontWeight: 'bold',\r\n      paddingBottom: '5px',\r\n      color: '#24FE41',\r\n    },\r\n    marginLeft: '10px',\r\n  },\r\n  fileError: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '& svg': {\r\n      fontSize: '30px',\r\n      fontWeight: 'bold',\r\n      paddingBottom: '5px',\r\n      color: 'red',\r\n    },\r\n    marginLeft: '10px',\r\n  },\r\n  submitContainer: {\r\n    marginTop: '50px',\r\n    '& button': {\r\n      width: '100px',\r\n      marginRight: '10px',\r\n    },\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst Form = ({ initName = '', initDescription = '', initFile = null, mode = 'new', saveCv }) => {\r\n  const classes = useStyle();\r\n  const [name, setName] = useState(initName);\r\n  const [file, setFile] = useState(initFile);\r\n  const [description, setDescription] = useState(initDescription);\r\n  const [error, setError] = useState({ nameError: false, descriptionError: false, fileError: false });\r\n  const [initFlag, setInitFlag] = useState(true);\r\n  const [visited, setVisited] = useState({ nameVisit: false, descriptionVisit: false, fileVisit: false });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === 'name') {\r\n      if (!visited.nameVisit) setVisited((prevState) => ({ ...prevState, ['nameVisit']: true }));\r\n      setName(value);\r\n    } else if (name === 'description') {\r\n      if (!visited.descriptionVisit) setVisited((prevState) => ({ ...prevState, ['descriptionVisit']: true }));\r\n      setDescription(value);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = async (e) => {\r\n    if (!visited.fileVisit) setVisited((prevState) => ({ ...prevState, ['fileVisit']: true }));\r\n    setFile(e.target.files[0]);\r\n    setError((prevState) => ({ ...prevState, ['fileError']: false }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    //on first submit check all fields\r\n    if (initFlag) {\r\n      setVisited((prevState) => ({\r\n        ...prevState,\r\n        ['fileVisit']: true,\r\n        ['nameVisit']: true,\r\n        ['descriptionVisit']: true,\r\n      }));\r\n      setInitFlag(false);\r\n    }\r\n\r\n    //if no error continue submitting\r\n    if (!(error.nameError || error.descriptionError || error.fileError)) {\r\n      saveCv(name, description, file);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    validate('file');\r\n  }, [file]);\r\n\r\n  useEffect(() => {\r\n    validate('name');\r\n  }, [name]);\r\n\r\n  useEffect(() => {\r\n    validate('description');\r\n  }, [description]);\r\n\r\n  useEffect(() => {\r\n    validate('file');\r\n    validate('name');\r\n    validate('description');\r\n  }, [visited]);\r\n\r\n  useEffect(() => {\r\n    setName(initName);\r\n  }, [initName]);\r\n\r\n  useEffect(() => {\r\n    setDescription(initDescription);\r\n  }, [initDescription]);\r\n\r\n  useEffect(() => {\r\n    setFile(initFile);\r\n  }, [initFile]);\r\n\r\n  const handleReset = async () => {\r\n    setName('');\r\n    setDescription('');\r\n    setFile(null);\r\n    setInitFlag(true);\r\n    await setVisited({ nameVisit: false, descriptionVisit: false, fileVisit: false });\r\n    await setError({ nameError: false, descriptionError: false, fileError: false });\r\n  };\r\n\r\n  const validate = async (input) => {\r\n    //console.log('validate ' + input);\r\n    switch (input) {\r\n      case 'name':\r\n        if (name.length >= MAX_NAME_LENGTH && visited.nameVisit) {\r\n          // console.log('val name');\r\n          setError((prevState) => ({ ...prevState, ['nameError']: true }));\r\n        } else if (error.nameError) {\r\n          setError((prevState) => ({ ...prevState, ['nameError']: false }));\r\n        }\r\n        break;\r\n      case 'description':\r\n        if (description.length >= MAX_DESCRIPTION_LENGTH && visited.descriptionVisit) {\r\n          // console.log('val description');\r\n          setError((prevState) => ({ ...prevState, ['descriptionError']: true }));\r\n        } else if (error.descriptionError) {\r\n          setError((prevState) => ({ ...prevState, ['descriptionError']: false }));\r\n        }\r\n        break;\r\n      case 'file':\r\n        if (file === null && visited.fileVisit) {\r\n          // console.log('val file');\r\n          setError((prevState) => ({ ...prevState, ['fileError']: true }));\r\n        } else if (error.fileError) {\r\n          setError((prevState) => ({ ...prevState, ['fileError']: false }));\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // console.log(error);\r\n    // console.log(visited);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} onReset={handleReset}>\r\n      <Container className={classes.root}>\r\n        <Typography className={classes.formTitle} variant='h4'>\r\n          {mode === 'edit' ? 'Edit CV:' : 'New CV:'}\r\n        </Typography>\r\n        <InputTextField\r\n          name='name'\r\n          value={name}\r\n          error={error.nameError}\r\n          errorMessage={`Maximum name length ${MAX_NAME_LENGTH} characters`}\r\n          required={visited.nameVisit}\r\n          placeholder='Enter file name '\r\n          handleInputChange={handleInputChange}\r\n        />\r\n        <InputTextField\r\n          name='description'\r\n          value={description}\r\n          error={error.descriptionError}\r\n          errorMessage={`Maximum description length ${MAX_DESCRIPTION_LENGTH} characters`}\r\n          required={false}\r\n          placeholder='Enter file description (language,position..)'\r\n          handleInputChange={handleInputChange}\r\n        />\r\n        <div className={classes.inputContainer}>\r\n          <Button className={classes.fileButton} variant='contained' startIcon={<UploadIcon />} component='label'>\r\n            Upload File\r\n            <div className={classes.fileInput}>\r\n              {/* <FileBase64 onDone={handleFileSelect} /> */}\r\n              <input type='file' onChange={handleFileSelect} />\r\n            </div>\r\n          </Button>\r\n          <div className={clsx(classes.inputStatusIcon, { [classes.hide]: !file })}>\r\n            <CheckIcon />\r\n          </div>\r\n          <div className={clsx(classes.fileError, { [classes.hide]: !error.fileError })}>\r\n            <ErrorIcon />\r\n            <Typography variant='body1' color='secondary'>\r\n              Please choose file\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.submitContainer}>\r\n          <MyButton name='Save' theme='dark' type='submit' />\r\n          <MyButton name='Cancel' theme='dark' type='reset' />\r\n        </div>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n",["289","290"],"C:\\Projects\\CvManager\\cv-manager\\src\\actions\\coverActions.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\CoverPanel\\NewCoverForm.js",["291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport FileBase64 from 'react-file-base64';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputTextField from '../common/InputTextField.js';\r\nimport InputTextArea from '../common/InputTextArea.js';\r\nimport MyButton from '../common/MyButton.js';\r\nimport clsx from 'clsx';\r\nimport { MAX_NAME_LENGTH, MAX_COVER_LENGTH } from '../../consts/measures.js';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start',\r\n    marginTop: '50px',\r\n    marginLeft: 0,\r\n    paddingLeft: 0,\r\n  },\r\n  formTitle: {\r\n    width: '100%',\r\n    color: 'white',\r\n    textAlign: 'left',\r\n    marginTop: '50px',\r\n    marginBottom: '10px',\r\n  },\r\n  submitContainer: {\r\n    marginTop: '50px',\r\n    '& button': {\r\n      width: '100px',\r\n      marginRight: '10px',\r\n    },\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst Form = ({ initName = '', initContent = '', mode = 'new', saveCover }) => {\r\n  const classes = useStyle();\r\n\r\n  const [name, setName] = useState(initName);\r\n  const [content, setContent] = useState(initContent);\r\n  const [error, setError] = useState({ nameError: false, contentError: false });\r\n  const [initFlag, setInitFlag] = useState(true);\r\n  const [visited, setVisited] = useState({ nameVisit: false, contentVisit: false });\r\n\r\n  const handleInputChange = async (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === 'name') {\r\n      if (!visited.nameVisit) setVisited((prevState) => ({ ...prevState, ['nameVisit']: true }));\r\n      setName(value);\r\n    } else if (name === 'content') {\r\n      if (!visited.contentVisit) setVisited((prevState) => ({ ...prevState, ['contentVisit']: true }));\r\n      setContent(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (initFlag) {\r\n      setVisited((prevState) => ({\r\n        ...prevState,\r\n        ['nameVisit']: true,\r\n        ['contentVisit']: true,\r\n      }));\r\n      setInitFlag(false);\r\n    }\r\n    if (!(error.nameError || error.contentError)) {\r\n      saveCover(name, content);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    validate('name');\r\n  }, [name]);\r\n\r\n  useEffect(() => {\r\n    validate('content');\r\n  }, [content]);\r\n\r\n  useEffect(() => {\r\n    validate('name');\r\n    validate('content');\r\n  }, [visited]);\r\n\r\n  useEffect(() => {\r\n    setName(initName);\r\n  }, [initName]);\r\n\r\n  useEffect(() => {\r\n    setContent(initContent);\r\n  }, [initContent]);\r\n\r\n  const handleReset = async () => {\r\n    setName('');\r\n    setContent('');\r\n    setInitFlag(true);\r\n    await setVisited({ nameVisit: false, contentVisit: false });\r\n    await setError({ nameError: false, contentError: false });\r\n  };\r\n\r\n  const validate = async (input) => {\r\n    switch (input) {\r\n      case 'name':\r\n        if (name.length >= MAX_NAME_LENGTH && visited.nameVisit) {\r\n          setError((prevState) => ({ ...prevState, ['nameError']: true }));\r\n        } else if (error.nameError) {\r\n          setError((prevState) => ({ ...prevState, ['nameError']: false }));\r\n        }\r\n        break;\r\n      case 'content':\r\n        if (content.length >= MAX_COVER_LENGTH && visited.contentVisit) {\r\n          setError((prevState) => ({ ...prevState, ['contentError']: true }));\r\n        } else if (error.descriptionError) {\r\n          setError((prevState) => ({ ...prevState, ['contentError']: false }));\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} onReset={handleReset}>\r\n      <Container className={classes.root}>\r\n        <Typography className={classes.formTitle} variant='h4'>\r\n          {mode === 'edit' ? 'Edit cover:' : 'New cover:'}\r\n        </Typography>\r\n        <InputTextField\r\n          name='name'\r\n          value={name}\r\n          error={error.nameError}\r\n          placeholder='Enter cover name'\r\n          required={visited.nameVisit}\r\n          errorMessage={`Max name length is ${MAX_NAME_LENGTH} characters`}\r\n          handleInputChange={handleInputChange}\r\n        />\r\n        <InputTextArea\r\n          name='content'\r\n          value={content}\r\n          error={error.contentError}\r\n          placeholder='Enter cover content name'\r\n          required={false}\r\n          errorMessage={`Max cover length is ${MAX_COVER_LENGTH} characters`}\r\n          handleInputChange={handleInputChange}\r\n        />\r\n        {/* <div className={error ? classes.messageErrorShow : classes.messageError}>Message is required</div> */}\r\n        <div className={classes.submitContainer}>\r\n          <MyButton name='Save' theme='dark' type='submit' />\r\n          <MyButton name='Cancel' theme='dark' type='reset' />\r\n        </div>\r\n      </Container>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\consts\\colors.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\InputTextField.js",["308","309","310","311","312"],"import TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { LIGHT_BLUE, DARK_BLUE, LIGHT, DARK, LIME, RED_ERROR } from '../../consts/colors.js';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '80%',\r\n    margin: '15px 0px',\r\n    '& .MuiTextField-root': {\r\n      width: '100%',\r\n      color: 'white',\r\n      '& .MuiInputBase-root': {\r\n        color: 'white',\r\n      },\r\n      '& input:valid:focus + fieldset': {\r\n        borderLeftWidth: 6,\r\n        padding: '4px !important',\r\n      },\r\n      '& input:invalid + fieldset': {\r\n        borderColor: 'red',\r\n        borderWidth: 2,\r\n      },\r\n    },\r\n  },\r\n\r\n  valid: {\r\n    '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: 'white',\r\n    },\r\n    '& label': {\r\n      color: LIME,\r\n    },\r\n    '& label.Mui-focused': {\r\n      color: LIME,\r\n    },\r\n  },\r\n\r\n  error: {},\r\n};\r\n\r\nconst InputTextField = ({\r\n  name,\r\n  value,\r\n  error,\r\n  errorMessage = 'error',\r\n  required = false,\r\n  handleInputChange,\r\n  placeholder = '',\r\n  classes,\r\n}) => (\r\n  <div className={clsx(classes.root, { [classes.error]: error, [classes.valid]: !error })}>\r\n    <TextField\r\n      variant='outlined'\r\n      label={name}\r\n      name={name}\r\n      value={value}\r\n      error={error}\r\n      required={required}\r\n      autoComplete='off'\r\n      placeholder={placeholder}\r\n      helperText={error && errorMessage}\r\n      onChange={handleInputChange}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(InputTextField);\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\MyButton.js",["313"],"import Button from '@material-ui/core/Button';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { LIGHT_BLUE, DARK_BLUE, LIGHT, DARK } from '../../consts/colors.js';\r\n\r\nconst styles = (theme) => ({\r\n  root: {},\r\n\r\n  buttonDarkToLight: {\r\n    padding: '2px',\r\n    background: 'black',\r\n    color: 'white',\r\n    border: `3px solid ${LIGHT}`,\r\n    borderRadius: '10px',\r\n    boxShadow: '0 10px 6px -6px white',\r\n    textTransform: 'none',\r\n    fontFamily: 'Russo One, sans-serif',\r\n    fontSize: '1.2rem',\r\n    [theme.breakpoints.up('md')]: {\r\n      fontSize: '1.4rem',\r\n    },\r\n\r\n    '&:hover': {\r\n      background: 'white',\r\n      border: `3px solid ${DARK}`,\r\n      color: 'black',\r\n      boxShadow: '0 10px 6px -6px black',\r\n    },\r\n  },\r\n\r\n  buttonLightToDark: {\r\n    padding: '2 6px',\r\n    background: 'white',\r\n    color: 'black',\r\n    border: `3px solid ${DARK_BLUE}`,\r\n    borderRadius: '10px',\r\n    boxShadow: '0 10px 6px -6px black',\r\n    textTransform: 'none',\r\n    fontFamily: 'Russo One, sans-serif',\r\n    fontSize: '1.2rem',\r\n    [theme.breakpoints.up('md')]: {\r\n      fontSize: '1.4rem',\r\n    },\r\n\r\n    '&:hover': {\r\n      background: 'black',\r\n      color: 'white',\r\n      border: `3px solid ${LIGHT}`,\r\n      boxShadow: '0 10px 6px -6px white',\r\n    },\r\n  },\r\n});\r\n\r\nconst MyButton = ({ name, theme, type = 'button', onClick, classes }) => (\r\n  <Button\r\n    className={clsx(classes.root, {\r\n      [classes.buttonDarkToLight]: theme === 'dark',\r\n      [classes.buttonLightToDark]: theme === 'light',\r\n    })}\r\n    //className={theme === 'dark' ? classes.buttonDarkToLight : classes.buttonLightToDark}\r\n    type={type}\r\n    variant='contained'\r\n    onClick={onClick}\r\n  >\r\n    {name}\r\n  </Button>\r\n);\r\n\r\nexport default withStyles(styles)(MyButton);\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\InputTextArea.js",["314","315","316","317","318"],"import TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { LIGHT_BLUE, DARK_BLUE, LIGHT, DARK, LIME, RED_ERROR } from '../../consts/colors.js';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '80%',\r\n    margin: '15px 0px',\r\n    '& .MuiTextField-root': {\r\n      width: '100%',\r\n      color: 'white',\r\n      '& .MuiInputBase-root': {\r\n        color: 'white',\r\n      },\r\n      '& textarea:valid:focus + fieldset': {\r\n        borderLeftWidth: 6,\r\n        padding: '4px !important',\r\n      },\r\n      '& textarea:invalid + fieldset': {\r\n        border: 'red',\r\n        borderWidth: 2,\r\n      },\r\n    },\r\n  },\r\n\r\n  valid: {\r\n    '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: 'white',\r\n    },\r\n    '& label': {\r\n      color: LIME,\r\n    },\r\n    '& label.Mui-focused': {\r\n      color: LIME,\r\n    },\r\n  },\r\n\r\n  error: {},\r\n};\r\n\r\nconst InputTextArea = ({\r\n  name,\r\n  value,\r\n  error,\r\n  errorMessage = 'error',\r\n  isRequired = false,\r\n  handleInputChange,\r\n  placeholder = '',\r\n  classes,\r\n}) => (\r\n  <div className={clsx(classes.root, { [classes.error]: error, [classes.valid]: !error })}>\r\n    <TextField\r\n      variant='outlined'\r\n      multiline\r\n      rows={5}\r\n      label={name}\r\n      name={name}\r\n      value={value}\r\n      required={isRequired}\r\n      error={error}\r\n      placeholder={placeholder}\r\n      helperText={error && errorMessage}\r\n      onChange={handleInputChange}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(InputTextArea);\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\DocViewer.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\actions\\optionsActions.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\optionsReducer.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\styles\\panelStyle.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\TemplatePanel\\TemplateForm.js",["319","320","321","322","323","324","325","326","327"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useForm, Controller, FormProvider } from 'react-hook-form';\r\nimport InputTextField from '../common/InputTextField.js';\r\nimport MyButton from '../common/MyButton.js';\r\nimport FormSelect from '../common/FormSelect.js';\r\nimport FormInput from '../common/FormInput.js';\r\nimport { getAllCvs } from '../../actions/cvActions.js';\r\nimport { getAllCovers } from '../../actions/coverActions.js';\r\nimport { MAX_NAME_LENGTH, MAX_DESCRIPTION_LENGTH } from '../../consts/measures.js';\r\nimport FormTitle from '../common/FormTitle.js';\r\nimport formStyle from '../../styles/formStyle.js';\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required('Name is required field')\r\n    .test('len', `Must be less than ${MAX_NAME_LENGTH} characters`, (val) => val.length <= MAX_NAME_LENGTH),\r\n  description: yup\r\n    .string()\r\n    .test(\r\n      'len',\r\n      `Must be less than ${MAX_DESCRIPTION_LENGTH} characters`,\r\n      (val) => val.length <= MAX_DESCRIPTION_LENGTH\r\n    ),\r\n  cvSelect: yup.string().required('Please select cv!'),\r\n  coverSelect: yup.string(),\r\n});\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   // root: {\r\n//   //   width: '100%',\r\n//   //   display: 'flex',\r\n//   //   flexDirection: 'column',\r\n//   //   justifyContent: 'flex-start',\r\n//   // },\r\n//   // formControll: {},\r\n//   // textField: {\r\n//   //   width: '80%',\r\n//   //   '& .MuiTextField-root': {\r\n//   //     color: 'white',\r\n//   //     borderColor: 'white',\r\n//   //   },\r\n//   // },\r\n//   // selectField: {\r\n//   //   width: '50%',\r\n//   // },\r\n//   // formTitle: {\r\n//   //   margin: '50px 0',\r\n//   // },\r\n// }));\r\n\r\nconst TemplateForm = ({\r\n  initName = '',\r\n  initDescription = '',\r\n  initCvId = '',\r\n  initCoverId = '',\r\n  mode = 'new',\r\n  saveTemplate,\r\n  closeForm,\r\n  classes,\r\n}) => {\r\n  // const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const cvList = useSelector((state) => state.cv.items.map((item) => ({ id: item.id, name: item.name })));\r\n  const coverList = useSelector((state) => state.cover.items.map((item) => ({ id: item.id, name: item.name })));\r\n\r\n  const formObject = useForm({\r\n    mode: 'all',\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const { handleSubmit, reset, control, register, errors, clearErrors } = formObject;\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    saveTemplate(data.name, data.description, data.cvSelect, data.coverSelect);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    reset({ name: '', description: '', cvSelect: '', coverSelect: '' });\r\n    clearErrors();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    closeForm();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (cvList.length === 0) dispatch(getAllCvs());\r\n    if (coverList.length === 0) dispatch(getAllCovers());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset({ name: initName, description: initDescription, cvSelect: initCvId, coverSelect: initCoverId });\r\n  }, [initName]);\r\n\r\n  return (\r\n    <FormProvider {...formObject}>\r\n      <form className={classes.root} onSubmit={handleSubmit(onSubmit)} onReset={handleReset}>\r\n        {/* <Container className={classes.root}> */}\r\n        <FormTitle mode={mode} label='template' handleClose={handleClose} />\r\n        <FormInput name='name' label='Name' required={true} defaultValue={initName} errorobj={errors} />\r\n        <FormInput\r\n          name='description'\r\n          label='Description'\r\n          defaultValue={initDescription}\r\n          required={false}\r\n          errorobj={errors}\r\n        />\r\n        <FormSelect\r\n          name='cvSelect'\r\n          label='Cv'\r\n          options={cvList}\r\n          defaultValue={initCvId}\r\n          required={true}\r\n          errorobj={errors}\r\n        />\r\n        <FormSelect\r\n          name='coverSelect'\r\n          label='Cover'\r\n          options={coverList}\r\n          defaultValue={initCoverId}\r\n          required={false}\r\n          errorobj={errors}\r\n        />\r\n        <div className={classes.submitContainer}>\r\n          <MyButton name='Save' theme='dark' type='submit' />\r\n          <MyButton name='Reset' theme='dark' type='reset' />\r\n        </div>\r\n        {/* </Container> */}\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default withStyles(formStyle)(TemplateForm);\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\TemplatePanel\\Template\\Template.js",["328","329","330","331","332"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport clsx from 'clsx';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { LIGHT_BLUE, DARK_BLUE, LIGHT, DARK, LIME } from '../../../consts/colors.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiListItem-container': {\r\n      background: LIGHT,\r\n      maxWidth: '100%',\r\n      height: '100px',\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      margin: 0,\r\n      padding: 0,\r\n      marginBottom: '5px',\r\n      borderRadius: '2px',\r\n      '& .MuiListItemText-root': {\r\n        paddingRight: '80px',\r\n        paddingLeft: '10px',\r\n        [theme.breakpoints.down('sm')]: {\r\n          paddingRight: '10px',\r\n        },\r\n      },\r\n\r\n      '& .MuiAvatar-root': {\r\n        backgroundColor: DARK_BLUE,\r\n        width: '60px',\r\n        height: '60px',\r\n        '& svg': {\r\n          fontSize: '55px',\r\n        },\r\n      },\r\n\r\n      [theme.breakpoints.down('sm')]: {\r\n        height: '200px',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        '& .MuiListItemSecondaryAction-root': {\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        },\r\n        // '& .MuiListItemText-root': {\r\n        //   textAlign: 'center',\r\n        // },\r\n        '& .MuiAvatar-root': {\r\n          width: '70px',\r\n          height: '70px',\r\n          '& svg': {\r\n            fontSize: '50px',\r\n          },\r\n        },\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        '& .MuiListItemAvatar-root': {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n    '& svg': {\r\n      color: DARK_BLUE,\r\n    },\r\n  },\r\n\r\n  iconButton: {\r\n    '& svg': {\r\n      fontSize: '32px',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Template = ({ id, name, description, cvId, coverId, editTemplate, deleteTemplate }) => {\r\n  const classes = useStyles();\r\n\r\n  const onEditClick = () => {\r\n    editTemplate(id);\r\n  };\r\n\r\n  const onDeleteClick = () => {\r\n    deleteTemplate(id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <FolderIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          style={{ wordBreak: 'break-all' }}\r\n          primary={\r\n            <React.Fragment>\r\n              <Typography component='span' variant='h6' color='secondary' className={classes.descriptionText}>\r\n                {name}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography component='span' variant='body2' className={classes.descriptionText}>\r\n                {description}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n        <ListItemSecondaryAction>\r\n          <IconButton className={clsx(classes.iconButton)} edge='end' aria-label='edit' onClick={onEditClick}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            className={clsx(classes.iconButton, classes.deleteIconButton)}\r\n            edge='end'\r\n            aria-label='delete'\r\n            onClick={onDeleteClick}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Template;\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\actions\\templateActions.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormSelect.js",["333","334","335","336","337","338","339","340","341"],"import React, { forwardRef } from 'react';\r\nimport { useForm, Controller, useFormContext } from 'react-hook-form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport { LIGHT_BLUE, DARK_BLUE, LIGHT, DARK, RED_ERROR, LIME } from '../../consts/colors.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '50%',\r\n    minWidth: '260px',\r\n    margin: '15px 0px',\r\n    '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: 'white',\r\n    },\r\n    '&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\r\n      borderWidth: 4,\r\n      padding: '4px !important',\r\n    },\r\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n      borderLeftWidth: 6,\r\n      borderWidth: 4,\r\n      padding: '4px !important',\r\n    },\r\n    '& label': {\r\n      color: LIME,\r\n    },\r\n    '& label.Mui-error': {\r\n      color: LIME,\r\n    },\r\n    '& label.Mui-focused': {\r\n      color: LIME,\r\n    },\r\n\r\n    '& .MuiInputBase-root': {\r\n      color: 'white',\r\n    },\r\n    '& .MuiSelect-icon': {\r\n      fontSize: '30px',\r\n      color: 'white',\r\n    },\r\n  },\r\n  reqLabel: {\r\n    color: '#f44336',\r\n  },\r\n}));\r\n\r\nconst MuiSelect = forwardRef((props, ref) => {\r\n  const classes = useStyles();\r\n  const { label, name, options, required, errorobj } = props;\r\n\r\n  let isError = false;\r\n  let errorMessage = '';\r\n  if (errorobj && errorobj.hasOwnProperty(name)) {\r\n    isError = true;\r\n    errorMessage = errorobj[name].message;\r\n  }\r\n\r\n  return (\r\n    <FormControl className={classes.root} variant='outlined' error={isError}>\r\n      <InputLabel className={classes.inputLabel} htmlFor={name}>\r\n        {label} {required ? <span className='reqLabel'>*</span> : null}\r\n      </InputLabel>\r\n      <Select className={classes.select} variant='outlined' label={label} id={name} {...props}>\r\n        <MenuItem value=''>\r\n          <em>None</em>\r\n        </MenuItem>\r\n        {options.map((item) => (\r\n          <MenuItem key={item.id} value={item.id}>\r\n            {item.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      <FormHelperText>{errorMessage}</FormHelperText>\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nfunction FormSelect(props) {\r\n  const { name, label, options, defaultValue } = props;\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Controller as={MuiSelect} control={control} name={name} label={label} defaultValue={defaultValue} {...props} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default FormSelect;\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormSelectAC.js",["342"],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormInput.js",["343","344","345","346","347","348","349","350","351"],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\CvPanel\\CvForm.js",["352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport * as yup from 'yup';\r\nimport clsx from 'clsx';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport UploadIcon from '@material-ui/icons/Publish';\r\nimport TopArrowIcon from '@material-ui/icons/VerticalAlignTop';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useForm, Controller, FormProvider } from 'react-hook-form';\r\nimport InputTextField from '../common/InputTextField.js';\r\nimport MyButton from '../common/MyButton.js';\r\nimport FormSelect from '../common/FormSelect.js';\r\nimport FileInput from '../common/FileInput.js';\r\nimport FormInput from '../common/FormInput.js';\r\nimport { getAllCvs } from '../../actions/cvActions.js';\r\nimport { getAllCovers } from '../../actions/coverActions.js';\r\nimport { MAX_NAME_LENGTH, MAX_DESCRIPTION_LENGTH } from '../../consts/measures.js';\r\nimport { FILE_FORMATS } from '../../consts/structs.js';\r\nimport { LIGHT_BLUE, DARK_BLUE, LIGHT, DARK, RED_ERROR, GREEN_SUCCESS } from '../../consts/colors.js';\r\nimport FormTitle from '../common/FormTitle.js';\r\nimport FormFileInput from '../common/FormFileInput.js';\r\nimport formStyle from '../../styles/formStyle.js';\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required('Name is required field')\r\n    .test('len', `Must be less than ${MAX_NAME_LENGTH} characters`, (val) => val.length <= MAX_NAME_LENGTH),\r\n  description: yup\r\n    .string()\r\n    .test(\r\n      'len',\r\n      `Must be less than ${MAX_DESCRIPTION_LENGTH} characters`,\r\n      (val) => val.length <= MAX_DESCRIPTION_LENGTH\r\n    ),\r\n  cvFile: yup\r\n    .mixed()\r\n    .required('File is required')\r\n    .test('fileSize', 'File is too large', (value) => {\r\n      return value.length > 0 && value[0].size < 3000000;\r\n    })\r\n    .test('type', 'Only doc, docx, pdf format supported', (value) => {\r\n      return value.length > 0 && FILE_FORMATS.includes(value[0].type);\r\n    }),\r\n});\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   // root: {\r\n//   //   width: '100%',\r\n//   //   display: 'flex',\r\n//   //   margin: 0,\r\n//   //   padding: 0,\r\n//   //   flexDirection: 'column',\r\n//   //   justifyContent: 'flex-start',\r\n//   // },\r\n//   // formTitle: {\r\n//   //   margin: '40px 0',\r\n//   //   color: 'white',\r\n//   // },\r\n//   // errorMessage: {\r\n//   //   color: RED_ERROR,\r\n//   //   margin: '5px 2px',\r\n//   // },\r\n//   // inputContainer: {\r\n//   //   display: 'flex',\r\n//   //   alignItems: 'center',\r\n//   // },\r\n//   // inputStatusIcon: {\r\n//   //   '& svg': {\r\n//   //     color: GREEN_SUCCESS,\r\n//   //     fontWeight: 'bold',\r\n//   //     fontSize: '45px',\r\n//   //     marginLeft: '5px',\r\n//   //   },\r\n//   // },\r\n//   // hide: {\r\n//   //   display: 'none',\r\n//   // },\r\n// }));\r\n\r\nconst CvForm = ({ initName = '', initDescription = '', initFile = '', mode = 'new', saveCv, closeForm, classes }) => {\r\n  //const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const formObject = useForm({\r\n    defaultValues: {\r\n      cvFile: '',\r\n    },\r\n    mode: 'all',\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const { handleSubmit, reset, control, register, watch, errors, clearErrors } = formObject;\r\n\r\n  const file = watch('cvFile');\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    saveCv(data.name, data.description, data.cvFile[0]);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    closeForm();\r\n  };\r\n\r\n  const handleReset = () => {\r\n    reset({ name: '', description: '', file: null });\r\n    clearErrors();\r\n  };\r\n\r\n  useEffect(() => {\r\n    reset({ name: initName, description: initDescription, file: initFile });\r\n  }, [initName]);\r\n\r\n  return (\r\n    <FormProvider {...formObject}>\r\n      <form className={classes.root} onSubmit={handleSubmit(onSubmit)} onReset={handleReset}>\r\n        {/* <Container className={classes.root}> */}\r\n        <FormTitle mode={mode} label='CV' handleClose={handleClose} />\r\n        <FormInput name='name' label='Name' required={true} defaultValue={initName} errorobj={errors} />\r\n        <FormInput\r\n          name='description'\r\n          label='Description'\r\n          defaultValue={initDescription}\r\n          required={false}\r\n          errorobj={errors}\r\n        />\r\n        <FormFileInput name='cvFile' errors={errors} initFile={initFile} />\r\n        <div className={classes.submitContainer}>\r\n          <MyButton name='Save' theme='dark' type='submit' />\r\n          <MyButton name='Reset' theme='dark' type='reset' />\r\n        </div>\r\n        {/* </Container> */}\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default withStyles(formStyle)(CvForm);\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FileInput.js",["386","387","388","389","390","391","392","393","394","395","396"],"import React, { useState, useEffect } from 'react';\r\nimport { useFormContext, Controller, useForm } from 'react-hook-form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport UploadIcon from '@material-ui/icons/Publish';\r\nimport Button from '@material-ui/core/Button';\r\nimport { LIGHT_BLUE, DARK_BLUE, LIGHT, DARK, RED_ERROR, GREEN_SUCCESS } from '../../consts/colors.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '200px',\r\n    height: '45px',\r\n    background: LIGHT,\r\n    border: '2px solid',\r\n    borderColor: DARK_BLUE,\r\n    borderRadius: '5px',\r\n    margin: '15px 0',\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    '&:hover': {\r\n      backgroundColor: 'white',\r\n      borderColor: 'white',\r\n      '& .MuiButton-label svg': {\r\n        color: LIGHT_BLUE,\r\n      },\r\n    },\r\n    '& .MuiButton-label': {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start',\r\n      marginTop: '3px',\r\n      color: DARK_BLUE,\r\n      '& svg': {\r\n        fontSize: '36px',\r\n        marginBottom: '4px',\r\n        marginRight: '10px',\r\n        color: DARK_BLUE,\r\n      },\r\n    },\r\n  },\r\n\r\n  fileInput: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst FileInput = (props) => {\r\n  const classes = useStyles();\r\n  const { control, register } = useFormContext();\r\n  const { name, label, required, onChange, errorobj, defaultValue } = props;\r\n  let isError = false;\r\n  let errorMessage = '';\r\n  // const [file, setFile] = useState(null);\r\n\r\n  if (errorobj && errorobj.hasOwnProperty(name)) {\r\n    isError = true;\r\n    errorMessage = errorobj[name].message;\r\n  }\r\n\r\n  return (\r\n    <Controller\r\n      render={({ onChange, onBlur, name }) => (\r\n        <Button className={classes.root} variant='contained' startIcon={<UploadIcon />} component='label'>\r\n          Upload File\r\n          <div className={classes.fileInput}>\r\n            <input type='file' name={name} onBlur={onBlur} ref={register} />\r\n          </div>\r\n        </Button>\r\n      )}\r\n      control={control}\r\n      name={name}\r\n      defaultValue={defaultValue}\r\n      error={isError}\r\n      helperText={errorMessage}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FileInput;\r\n{\r\n  /* <input ref={register} type='file' name={'cvFile'} /> */\r\n}\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\consts\\structs.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormTitle.js",["397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport * as yup from 'yup';\r\nimport clsx from 'clsx';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport UploadIcon from '@material-ui/icons/Publish';\r\nimport TopArrowIcon from '@material-ui/icons/VerticalAlignTop';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useForm, Controller, FormProvider } from 'react-hook-form';\r\nimport InputTextField from '../common/InputTextField.js';\r\nimport MyButton from '../common/MyButton.js';\r\nimport FormSelect from '../common/FormSelect.js';\r\nimport FileInput from '../common/FileInput.js';\r\nimport FormInput from '../common/FormInput.js';\r\nimport { getAllCvs } from '../../actions/cvActions.js';\r\nimport { getAllCovers } from '../../actions/coverActions.js';\r\nimport { MAX_NAME_LENGTH, MAX_DESCRIPTION_LENGTH } from '../../consts/measures.js';\r\nimport { FILE_FORMATS } from '../../consts/structs.js';\r\nimport { LIGHT_BLUE, DARK_BLUE, LIGHT, DARK, RED_ERROR, GREEN_SUCCESS } from '../../consts/colors.js';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '80%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    margin: '40px 0',\r\n    color: 'white',\r\n  },\r\n  formTitle: {},\r\n  closeButton: {\r\n    padding: 0,\r\n    margin: 0,\r\n    marginTop: '2px',\r\n    '& svg': {\r\n      color: LIGHT,\r\n      fontSize: '36px',\r\n    },\r\n  },\r\n});\r\n\r\nconst FormTitle = ({ mode, label, handleClose }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.formTitle} variant='h4'>\r\n        {mode === 'edit' ? `Edit ${label}:` : `New ${label}:`}\r\n      </Typography>\r\n      <IconButton className={classes.closeButton} onClick={handleClose}>\r\n        <TopArrowIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormTitle;\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormFileInput.js",["433"],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\CoverPanel\\CoverForm.js",["434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453"],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\DocListItem.js",["454","455","456","457"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport clsx from 'clsx';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/DeleteForever';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { LIGHT_BLUE, DARK_BLUE, LIGHT, DARK, LIME } from '../../consts/colors.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiListItem-container': {\r\n      background: LIGHT,\r\n      maxWidth: '100%',\r\n      height: '100px',\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      margin: 0,\r\n      padding: 0,\r\n      marginBottom: '5px',\r\n      borderRadius: '2px',\r\n      '& .MuiListItemText-root': {\r\n        paddingRight: '80px',\r\n        paddingLeft: '10px',\r\n        [theme.breakpoints.down('sm')]: {\r\n          paddingRight: '10px',\r\n        },\r\n      },\r\n\r\n      '& .MuiAvatar-root': {\r\n        backgroundColor: DARK_BLUE,\r\n        width: '60px',\r\n        height: '60px',\r\n        '& svg': {\r\n          fontSize: '40px',\r\n          color: 'white',\r\n        },\r\n      },\r\n\r\n      [theme.breakpoints.down('sm')]: {\r\n        height: '200px',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        '& .MuiListItemSecondaryAction-root': {\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        },\r\n        '& .MuiAvatar-root': {\r\n          width: '70px',\r\n          height: '70px',\r\n          '& svg': {\r\n            fontSize: '50px',\r\n          },\r\n        },\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        '& .MuiListItemAvatar-root': {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n    '& svg': {\r\n      color: DARK_BLUE,\r\n    },\r\n  },\r\n\r\n  iconButton: {\r\n    '& svg': {\r\n      fontSize: '32px',\r\n    },\r\n  },\r\n}));\r\n\r\nconst DocList = ({ id, name, description, type = '', file = '', actions = [], onEdit, onDelete }) => {\r\n  const classes = useStyles(useStyles());\r\n\r\n  const onDeleteClick = (e) => {\r\n    onDelete(id);\r\n  };\r\n\r\n  const onEditClick = (e) => {\r\n    onEdit({ id });\r\n  };\r\n\r\n  const listActions = actions.map((action, index) => {\r\n    switch (action) {\r\n      case 'delete': {\r\n        return (\r\n          <IconButton\r\n            key={index}\r\n            className={clsx(classes.iconButton, classes.deleteIconButton)}\r\n            edge='end'\r\n            aria-label='delete'\r\n            onClick={onDeleteClick}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        );\r\n      }\r\n      case 'edit': {\r\n        return (\r\n          <IconButton key={index} className={classes.iconButton} edge='end' aria-label='edit' onClick={onEditClick}>\r\n            <EditIcon />\r\n          </IconButton>\r\n        );\r\n      }\r\n      case 'open': {\r\n        return (\r\n          <IconButton\r\n            key={index}\r\n            className={clsx(classes.iconButton, classes.fileIconButton)}\r\n            href={file}\r\n            //target='_blank'\r\n            rel='noopener noreferrer'\r\n            edge='end'\r\n            aria-label='file'\r\n            component='a'\r\n          >\r\n            <FileIcon />\r\n          </IconButton>\r\n        );\r\n      }\r\n      default:\r\n        return <></>;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            {/* <FolderIcon /> */}\r\n            {type !== '' ? type : <FileIcon />}\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          style={{ wordBreak: 'break-all' }}\r\n          primary={\r\n            <React.Fragment>\r\n              <Typography component='span' variant='h6' color='secondary' className={classes.descriptionText}>\r\n                {name}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography component='span' variant='body2' className={classes.descriptionText}>\r\n                {description}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n        <ListItemSecondaryAction>{listActions}</ListItemSecondaryAction>\r\n      </ListItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocList;\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\styles\\formStyle.js",["458","459","460","461","462","463"],"import { LIGHT_BLUE, DARK_BLUE, LIGHT, DARK, RED_ERROR, GREEN_SUCCESS } from '../consts/colors.js';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    margin: 0,\r\n    marginBottom: '50px',\r\n    padding: 0,\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  submitContainer: {\r\n    marginTop: '50px',\r\n    '& button': {\r\n      width: '100px',\r\n      marginRight: '10px',\r\n    },\r\n  },\r\n};\r\n\r\nexport default styles;\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\SendMailPage\\SendMailPage.js",["464","465","466","467","468","469","470","471","472","473"],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\SendMailPage\\SendForm.js",["474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useForm, Controller, FormProvider } from 'react-hook-form';\r\nimport InputTextField from '../common/InputTextField.js';\r\nimport MyButton from '../common/MyButton.js';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormSelect from '../common/FormSelect.js';\r\nimport FormInput from '../common/FormInput.js';\r\nimport { getAllCvs } from '../../actions/cvActions.js';\r\nimport { getAllCovers } from '../../actions/coverActions.js';\r\nimport { getAllMyTemplates } from '../../actions/templateActions.js';\r\nimport { MAX_NAME_LENGTH, MAX_DESCRIPTION_LENGTH } from '../../consts/measures.js';\r\nimport FormTitle from '../common/FormTitle.js';\r\nimport formStyle from '../../styles/formStyle.js';\r\n\r\nconst useStyles = makeStyles({\r\n  // root: {\r\n  //   width: '100%',\r\n  //   display: 'flex',\r\n  //   flexDirection: 'column',\r\n  //   justifyContent: 'flex-start',\r\n  //   alignItems: 'center',\r\n  //   color: 'white',\r\n  // },\r\n});\r\n\r\nconst schema = yup.object().shape({\r\n  // to: yup.string().required('Email adress is required'),\r\n  // from: yup.string(),\r\n  // subject: yup.string().test('len', `Must be less than 80 characters`, (val) => val.length <= 80),\r\n  // cv: yup.string().required('Cv file is required'),\r\n  // cover: yup.string(),\r\n  // template: yup.string(),\r\n});\r\n\r\n// const defaultValue = {\r\n//   to: '',\r\n//   from: '',\r\n//   subject: '',\r\n//   cv: '',\r\n//   cover: '',\r\n//   template: '',\r\n// };\r\n\r\nconst SendForm = ({ makeMail }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const cvOptions = useSelector((state) => state.cv.items.map((item) => ({ id: item.id, name: item.name })));\r\n  const coverOptions = useSelector((state) => state.cover.items.map((item) => ({ id: item.id, name: item.name })));\r\n  const templateOptions = useSelector((state) =>\r\n    state.template.items.map((item) => ({ id: item.id, name: item.name }))\r\n  );\r\n  //const [selectedTemplate, setSelectedTemplate] = useState('');\r\n\r\n  const formObject = useForm({\r\n    mode: 'all',\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const { handleSubmit, reset, control, register, setValue, errors, watch, clearErrors } = formObject;\r\n\r\n  const template = watch('template');\r\n  const cv = watch('cv');\r\n  const cover = watch('cover');\r\n\r\n  const selectedTemplate = useSelector((state) => state.template.items.find((item) => item.id === template));\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    makeMail(data);\r\n  };\r\n\r\n  const onReset = () => {\r\n    // reset(defaultValue);\r\n    // clearErrors();\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCvs());\r\n    dispatch(getAllCovers());\r\n    dispatch(getAllMyTemplates());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedTemplate) {\r\n      setValue('cv', selectedTemplate.cv);\r\n      setValue('cover', selectedTemplate.cover);\r\n    }\r\n  }, [selectedTemplate]);\r\n\r\n  return (\r\n    <FormProvider {...formObject}>\r\n      <form className={classes.root} onSubmit={handleSubmit(onSubmit)} onReset={onReset}>\r\n        {/* <Container className={classes.root}> */}\r\n        <FormInput name='to' label='To' required={true} errorobj={errors} defaultValue='' />\r\n        <FormInput name='from' label='From' required={true} errorobj={errors} defaultValue='' />\r\n        <FormInput name='subject' label='Subject' required={false} errorobj={errors} defaultValue='' />\r\n        <div className={classes.useTemplateContainer}>\r\n          <FormSelect name='template' label='Template' options={templateOptions} defaultValue='' />\r\n        </div>\r\n        <div className={classes.useCvCoverContainer}>\r\n          <FormSelect name='cv' label='Cv' options={cvOptions} defaultValue='' />\r\n          <FormSelect name='cover' label='Cover' options={coverOptions} defaultValue='' />\r\n        </div>\r\n        <div className={classes.submitContainer}>\r\n          <MyButton name='Preview' theme='dark' type='submit' />\r\n        </div>\r\n        {/* </Container> */}\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default withStyles(formStyle)(SendForm);\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\RichTextEditor.js",["490","491","492"],"import React, { useState, useEffect, useRef, forwardRef } from 'react';\r\nimport { Editor, EditorState, RichUtils, getDefaultKeyBinding, convertFromRaw } from 'draft-js';\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\nimport { convertJsonToEditorState, convertEditorContentToJson } from '../../utills/editorUtils.js';\r\nimport './RichTextEditor.css';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\nexport const RichTextEditor = forwardRef((props, ref) => {\r\n  // const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n  const { initContent, onContentChange } = props;\r\n  const [editorState, setEditorState] = useState(() =>\r\n    initContent === ''\r\n      ? EditorState.createEmpty()\r\n      : // : EditorState.createWithContent(convertJsonToEditorState(props.initState))\r\n        EditorState.createWithContent(initContent)\r\n  );\r\n  const editor = useRef(null);\r\n\r\n  const focus = null; //() => refs.editor.focus();\r\n\r\n  const onChange = (editorState) => {\r\n    setEditorState(editorState);\r\n    onContentChange(editorState.getCurrentContent());\r\n  };\r\n\r\n  const _handleKeyCommand = (command, editorState) => {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n    if (newState) {\r\n      onChange(newState);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const _mapKeyToEditorCommand = (e) => {\r\n    if (e.keyCode === 9 /* TAB */) {\r\n      const newEditorState = RichUtils.onTab(e, editorState, 4 /* maxDepth */);\r\n      if (newEditorState !== editorState) {\r\n        onChange(newEditorState);\r\n      }\r\n      return;\r\n    }\r\n    return getDefaultKeyBinding(e);\r\n  };\r\n\r\n  const _toggleBlockType = (blockType) => {\r\n    onChange(RichUtils.toggleBlockType(editorState, blockType));\r\n  };\r\n\r\n  const _toggleInlineStyle = (inlineStyle) => {\r\n    onChange(RichUtils.toggleInlineStyle(editorState, inlineStyle));\r\n  };\r\n\r\n  // If the user changes block type before entering any text, we can\r\n  // either style the placeholder or hide it. Let's just hide it now.\r\n  let className = 'RichEditor-editor';\r\n  const contentState = editorState.getCurrentContent();\r\n  if (!contentState.hasText()) {\r\n    if (contentState.getBlockMap().first().getType() !== 'unstyled') {\r\n      className += ' RichEditor-hidePlaceholder';\r\n    }\r\n  }\r\n\r\n  const onEditorFocus = () => {\r\n    editor.current.focus();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   props.onContentChange(editorState);\r\n  // }, [editorState]);\r\n\r\n  useEffect(() => {\r\n    if (initContent !== '') {\r\n      setEditorState(EditorState.createWithContent(initContent));\r\n    }\r\n  }, [initContent]);\r\n\r\n  return (\r\n    <div className='RichEditor-root'>\r\n      <BlockStyleControls editorState={editorState} onToggle={_toggleBlockType} />\r\n      <InlineStyleControls editorState={editorState} onToggle={_toggleInlineStyle} />\r\n      <div className={className} onClick={focus}>\r\n        <Editor\r\n          name={'content'}\r\n          blockStyleFn={getBlockStyle}\r\n          customStyleMap={styleMap}\r\n          editorState={editorState}\r\n          handleKeyCommand={_handleKeyCommand}\r\n          keyBindingFn={_mapKeyToEditorCommand}\r\n          onChange={onChange}\r\n          placeholder='Your text...'\r\n          ref={editor}\r\n          onFocus={onEditorFocus}\r\n          spellCheck={true}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n  CODE: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n    fontSize: 16,\r\n    padding: 2,\r\n  },\r\n};\r\n\r\nconst getBlockStyle = (block) => {\r\n  switch (block.getType()) {\r\n    case 'blockquote':\r\n      return 'RichEditor-blockquote';\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst StyleButton = (props) => {\r\n  const onToggle = (e) => {\r\n    e.preventDefault();\r\n    props.onToggle(props.style);\r\n  };\r\n\r\n  let className = 'RichEditor-styleButton';\r\n  if (props.active) {\r\n    className += ' RichEditor-activeButton';\r\n  }\r\n\r\n  return (\r\n    <span className={className} onMouseDown={onToggle}>\r\n      {props.label}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst BLOCK_TYPES = [\r\n  { label: 'H1', style: 'header-one' },\r\n  { label: 'H2', style: 'header-two' },\r\n  { label: 'H3', style: 'header-three' },\r\n  { label: 'H4', style: 'header-four' },\r\n  { label: 'H5', style: 'header-five' },\r\n  { label: 'H6', style: 'header-six' },\r\n  { label: 'Blockquote', style: 'blockquote' },\r\n  { label: 'UL', style: 'unordered-list-item' },\r\n  { label: 'OL', style: 'ordered-list-item' },\r\n  { label: 'Code Block', style: 'code-block' },\r\n];\r\n\r\nconst BlockStyleControls = (props) => {\r\n  const { editorState } = props;\r\n  const selection = editorState.getSelection();\r\n  const blockType = editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\r\n\r\n  return (\r\n    <div className='RichEditor-controls'>\r\n      {BLOCK_TYPES.map((type) => (\r\n        <StyleButton\r\n          key={type.label}\r\n          active={type.style === blockType}\r\n          label={type.label}\r\n          onToggle={props.onToggle}\r\n          style={type.style}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nvar INLINE_STYLES = [\r\n  { label: 'Bold', style: 'BOLD' },\r\n  { label: 'Italic', style: 'ITALIC' },\r\n  { label: 'Underline', style: 'UNDERLINE' },\r\n  { label: 'Monospace', style: 'CODE' },\r\n];\r\n\r\nconst InlineStyleControls = (props) => {\r\n  const currentStyle = props.editorState.getCurrentInlineStyle();\r\n\r\n  return (\r\n    <div className='RichEditor-controls'>\r\n      {INLINE_STYLES.map((type) => (\r\n        <StyleButton\r\n          key={type.label}\r\n          active={currentStyle.has(type.style)}\r\n          label={type.label}\r\n          onToggle={props.onToggle}\r\n          style={type.style}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const FormRichTextEditor = (props) => {\r\n  const { name, defaultValue } = props;\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Controller\r\n        as={RichTextEditor}\r\n        valueName='editorState'\r\n        control={control}\r\n        name={name}\r\n        onChange={([value]) => value}\r\n        defaultValue={defaultValue}\r\n        {...props}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RichTextEditor;\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\userReducer.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\utills\\editorUtils.js",[],{"ruleId":"493","replacedBy":"494"},{"ruleId":"495","replacedBy":"496"},{"ruleId":"497","severity":1,"message":"498","line":3,"column":8,"nodeType":"499","messageId":"500","endLine":3,"endColumn":17},{"ruleId":"497","severity":1,"message":"501","line":4,"column":22,"nodeType":"499","messageId":"500","endLine":4,"endColumn":30},{"ruleId":"497","severity":1,"message":"502","line":16,"column":8,"nodeType":"499","messageId":"500","endLine":16,"endColumn":24},{"ruleId":"497","severity":1,"message":"503","line":11,"column":8,"nodeType":"499","messageId":"500","endLine":11,"endColumn":10},{"ruleId":"497","severity":1,"message":"504","line":13,"column":8,"nodeType":"499","messageId":"500","endLine":13,"endColumn":17},{"ruleId":"497","severity":1,"message":"505","line":15,"column":10,"nodeType":"499","messageId":"500","endLine":15,"endColumn":31},{"ruleId":"497","severity":1,"message":"506","line":15,"column":33,"nodeType":"499","messageId":"500","endLine":15,"endColumn":55},{"ruleId":"497","severity":1,"message":"507","line":15,"column":57,"nodeType":"499","messageId":"500","endLine":15,"endColumn":70},{"ruleId":"497","severity":1,"message":"508","line":22,"column":9,"nodeType":"499","messageId":"500","endLine":22,"endColumn":18},{"ruleId":"509","severity":1,"message":"510","line":66,"column":13,"nodeType":"511","endLine":68,"endColumn":4},{"ruleId":"509","severity":1,"message":"512","line":68,"column":6,"nodeType":"513","endLine":68,"endColumn":8,"suggestions":"514"},{"ruleId":"515","severity":1,"message":"516","line":125,"column":1,"nodeType":"517","messageId":"518","endLine":134,"endColumn":2},{"ruleId":"497","severity":1,"message":"519","line":5,"column":8,"nodeType":"499","messageId":"500","endLine":5,"endColumn":20},{"ruleId":"497","severity":1,"message":"520","line":12,"column":8,"nodeType":"499","messageId":"500","endLine":12,"endColumn":18},{"ruleId":"497","severity":1,"message":"521","line":16,"column":10,"nodeType":"499","messageId":"500","endLine":16,"endColumn":20},{"ruleId":"497","severity":1,"message":"522","line":16,"column":40,"nodeType":"499","messageId":"500","endLine":16,"endColumn":44},{"ruleId":"497","severity":1,"message":"523","line":16,"column":46,"nodeType":"499","messageId":"500","endLine":16,"endColumn":50},{"ruleId":"493","replacedBy":"524"},{"ruleId":"495","replacedBy":"525"},{"ruleId":"497","severity":1,"message":"526","line":3,"column":8,"nodeType":"499","messageId":"500","endLine":3,"endColumn":12},{"ruleId":"497","severity":1,"message":"527","line":8,"column":8,"nodeType":"499","messageId":"500","endLine":8,"endColumn":12},{"ruleId":"497","severity":1,"message":"505","line":12,"column":10,"nodeType":"499","messageId":"500","endLine":12,"endColumn":31},{"ruleId":"497","severity":1,"message":"507","line":12,"column":33,"nodeType":"499","messageId":"500","endLine":12,"endColumn":46},{"ruleId":"497","severity":1,"message":"528","line":14,"column":10,"nodeType":"499","messageId":"500","endLine":14,"endColumn":34},{"ruleId":"497","severity":1,"message":"529","line":14,"column":36,"nodeType":"499","messageId":"500","endLine":14,"endColumn":60},{"ruleId":"497","severity":1,"message":"530","line":16,"column":7,"nodeType":"499","messageId":"500","endLine":16,"endColumn":16},{"ruleId":"509","severity":1,"message":"512","line":63,"column":6,"nodeType":"513","endLine":63,"endColumn":8,"suggestions":"531"},{"ruleId":"497","severity":1,"message":"532","line":2,"column":22,"nodeType":"499","messageId":"500","endLine":2,"endColumn":32},{"ruleId":"497","severity":1,"message":"533","line":13,"column":38,"nodeType":"499","messageId":"500","endLine":13,"endColumn":64},{"ruleId":"497","severity":1,"message":"534","line":14,"column":31,"nodeType":"499","messageId":"500","endLine":14,"endColumn":45},{"ruleId":"497","severity":1,"message":"521","line":15,"column":10,"nodeType":"499","messageId":"500","endLine":15,"endColumn":20},{"ruleId":"497","severity":1,"message":"535","line":15,"column":22,"nodeType":"499","messageId":"500","endLine":15,"endColumn":31},{"ruleId":"497","severity":1,"message":"522","line":15,"column":40,"nodeType":"499","messageId":"500","endLine":15,"endColumn":44},{"ruleId":"497","severity":1,"message":"536","line":2,"column":10,"nodeType":"499","messageId":"500","endLine":2,"endColumn":22},{"ruleId":"497","severity":1,"message":"537","line":4,"column":8,"nodeType":"499","messageId":"500","endLine":4,"endColumn":22},{"ruleId":"497","severity":1,"message":"538","line":11,"column":8,"nodeType":"499","messageId":"500","endLine":11,"endColumn":16},{"ruleId":"497","severity":1,"message":"539","line":13,"column":8,"nodeType":"499","messageId":"500","endLine":13,"endColumn":17},{"ruleId":"497","severity":1,"message":"530","line":16,"column":7,"nodeType":"499","messageId":"500","endLine":16,"endColumn":16},{"ruleId":"509","severity":1,"message":"512","line":62,"column":6,"nodeType":"513","endLine":62,"endColumn":8,"suggestions":"540"},{"ruleId":"497","severity":1,"message":"541","line":1,"column":50,"nodeType":"499","messageId":"500","endLine":1,"endColumn":68},{"ruleId":"497","severity":1,"message":"542","line":4,"column":8,"nodeType":"499","messageId":"500","endLine":4,"endColumn":17},{"ruleId":"497","severity":1,"message":"543","line":5,"column":8,"nodeType":"499","messageId":"500","endLine":5,"endColumn":19},{"ruleId":"497","severity":1,"message":"544","line":7,"column":8,"nodeType":"499","messageId":"500","endLine":7,"endColumn":18},{"ruleId":"497","severity":1,"message":"521","line":15,"column":10,"nodeType":"499","messageId":"500","endLine":15,"endColumn":20},{"ruleId":"497","severity":1,"message":"535","line":15,"column":22,"nodeType":"499","messageId":"500","endLine":15,"endColumn":31},{"ruleId":"497","severity":1,"message":"522","line":15,"column":40,"nodeType":"499","messageId":"500","endLine":15,"endColumn":44},{"ruleId":"497","severity":1,"message":"545","line":15,"column":46,"nodeType":"499","messageId":"500","endLine":15,"endColumn":55},{"ruleId":"546","severity":1,"message":"547","line":97,"column":74,"nodeType":"548","messageId":"549","endLine":97,"endColumn":93,"fix":"550"},{"ruleId":"546","severity":1,"message":"551","line":100,"column":81,"nodeType":"548","messageId":"549","endLine":100,"endColumn":107,"fix":"552"},{"ruleId":"546","severity":1,"message":"553","line":106,"column":72,"nodeType":"548","messageId":"549","endLine":106,"endColumn":91,"fix":"554"},{"ruleId":"546","severity":1,"message":"555","line":108,"column":46,"nodeType":"548","messageId":"549","endLine":108,"endColumn":66,"fix":"556"},{"ruleId":"546","severity":1,"message":"553","line":117,"column":9,"nodeType":"548","messageId":"549","endLine":117,"endColumn":28,"fix":"557"},{"ruleId":"546","severity":1,"message":"547","line":118,"column":9,"nodeType":"548","messageId":"549","endLine":118,"endColumn":28,"fix":"558"},{"ruleId":"546","severity":1,"message":"551","line":119,"column":9,"nodeType":"548","messageId":"549","endLine":119,"endColumn":35,"fix":"559"},{"ruleId":"509","severity":1,"message":"560","line":132,"column":6,"nodeType":"513","endLine":132,"endColumn":12,"suggestions":"561"},{"ruleId":"509","severity":1,"message":"560","line":136,"column":6,"nodeType":"513","endLine":136,"endColumn":12,"suggestions":"562"},{"ruleId":"509","severity":1,"message":"560","line":140,"column":6,"nodeType":"513","endLine":140,"endColumn":19,"suggestions":"563"},{"ruleId":"509","severity":1,"message":"560","line":146,"column":6,"nodeType":"513","endLine":146,"endColumn":15,"suggestions":"564"},{"ruleId":"546","severity":1,"message":"565","line":175,"column":52,"nodeType":"548","messageId":"549","endLine":175,"endColumn":71,"fix":"566"},{"ruleId":"546","severity":1,"message":"565","line":177,"column":52,"nodeType":"548","messageId":"549","endLine":177,"endColumn":72,"fix":"567"},{"ruleId":"546","severity":1,"message":"568","line":183,"column":52,"nodeType":"548","messageId":"549","endLine":183,"endColumn":78,"fix":"569"},{"ruleId":"546","severity":1,"message":"568","line":185,"column":52,"nodeType":"548","messageId":"549","endLine":185,"endColumn":79,"fix":"570"},{"ruleId":"546","severity":1,"message":"555","line":191,"column":52,"nodeType":"548","messageId":"549","endLine":191,"endColumn":71,"fix":"571"},{"ruleId":"546","severity":1,"message":"555","line":193,"column":52,"nodeType":"548","messageId":"549","endLine":193,"endColumn":72,"fix":"572"},{"ruleId":"493","replacedBy":"573"},{"ruleId":"495","replacedBy":"574"},{"ruleId":"497","severity":1,"message":"575","line":3,"column":8,"nodeType":"499","messageId":"500","endLine":3,"endColumn":14},{"ruleId":"497","severity":1,"message":"542","line":4,"column":8,"nodeType":"499","messageId":"500","endLine":4,"endColumn":17},{"ruleId":"497","severity":1,"message":"544","line":6,"column":8,"nodeType":"499","messageId":"500","endLine":6,"endColumn":18},{"ruleId":"497","severity":1,"message":"576","line":7,"column":8,"nodeType":"499","messageId":"500","endLine":7,"endColumn":17},{"ruleId":"497","severity":1,"message":"577","line":8,"column":8,"nodeType":"499","messageId":"500","endLine":8,"endColumn":24},{"ruleId":"497","severity":1,"message":"578","line":13,"column":8,"nodeType":"499","messageId":"500","endLine":13,"endColumn":12},{"ruleId":"546","severity":1,"message":"547","line":58,"column":74,"nodeType":"548","messageId":"549","endLine":58,"endColumn":93,"fix":"579"},{"ruleId":"546","severity":1,"message":"580","line":61,"column":77,"nodeType":"548","messageId":"549","endLine":61,"endColumn":99,"fix":"581"},{"ruleId":"546","severity":1,"message":"547","line":72,"column":9,"nodeType":"548","messageId":"549","endLine":72,"endColumn":28,"fix":"582"},{"ruleId":"546","severity":1,"message":"580","line":73,"column":9,"nodeType":"548","messageId":"549","endLine":73,"endColumn":31,"fix":"583"},{"ruleId":"509","severity":1,"message":"560","line":84,"column":6,"nodeType":"513","endLine":84,"endColumn":12,"suggestions":"584"},{"ruleId":"509","severity":1,"message":"560","line":88,"column":6,"nodeType":"513","endLine":88,"endColumn":15,"suggestions":"585"},{"ruleId":"509","severity":1,"message":"560","line":93,"column":6,"nodeType":"513","endLine":93,"endColumn":15,"suggestions":"586"},{"ruleId":"546","severity":1,"message":"565","line":115,"column":52,"nodeType":"548","messageId":"549","endLine":115,"endColumn":71,"fix":"587"},{"ruleId":"546","severity":1,"message":"565","line":117,"column":52,"nodeType":"548","messageId":"549","endLine":117,"endColumn":72,"fix":"588"},{"ruleId":"546","severity":1,"message":"589","line":122,"column":52,"nodeType":"548","messageId":"549","endLine":122,"endColumn":74,"fix":"590"},{"ruleId":"546","severity":1,"message":"589","line":124,"column":52,"nodeType":"548","messageId":"549","endLine":124,"endColumn":75,"fix":"591"},{"ruleId":"497","severity":1,"message":"521","line":4,"column":10,"nodeType":"499","messageId":"500","endLine":4,"endColumn":20},{"ruleId":"497","severity":1,"message":"535","line":4,"column":22,"nodeType":"499","messageId":"500","endLine":4,"endColumn":31},{"ruleId":"497","severity":1,"message":"592","line":4,"column":33,"nodeType":"499","messageId":"500","endLine":4,"endColumn":38},{"ruleId":"497","severity":1,"message":"522","line":4,"column":40,"nodeType":"499","messageId":"500","endLine":4,"endColumn":44},{"ruleId":"497","severity":1,"message":"545","line":4,"column":52,"nodeType":"499","messageId":"500","endLine":4,"endColumn":61},{"ruleId":"497","severity":1,"message":"521","line":4,"column":10,"nodeType":"499","messageId":"500","endLine":4,"endColumn":20},{"ruleId":"497","severity":1,"message":"521","line":4,"column":10,"nodeType":"499","messageId":"500","endLine":4,"endColumn":20},{"ruleId":"497","severity":1,"message":"535","line":4,"column":22,"nodeType":"499","messageId":"500","endLine":4,"endColumn":31},{"ruleId":"497","severity":1,"message":"592","line":4,"column":33,"nodeType":"499","messageId":"500","endLine":4,"endColumn":38},{"ruleId":"497","severity":1,"message":"522","line":4,"column":40,"nodeType":"499","messageId":"500","endLine":4,"endColumn":44},{"ruleId":"497","severity":1,"message":"545","line":4,"column":52,"nodeType":"499","messageId":"500","endLine":4,"endColumn":61},{"ruleId":"497","severity":1,"message":"593","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":25},{"ruleId":"497","severity":1,"message":"594","line":3,"column":10,"nodeType":"499","messageId":"500","endLine":3,"endColumn":20},{"ruleId":"497","severity":1,"message":"498","line":6,"column":8,"nodeType":"499","messageId":"500","endLine":6,"endColumn":17},{"ruleId":"497","severity":1,"message":"595","line":7,"column":19,"nodeType":"499","messageId":"500","endLine":7,"endColumn":29},{"ruleId":"497","severity":1,"message":"537","line":8,"column":8,"nodeType":"499","messageId":"500","endLine":8,"endColumn":22},{"ruleId":"497","severity":1,"message":"596","line":78,"column":32,"nodeType":"499","messageId":"500","endLine":78,"endColumn":39},{"ruleId":"497","severity":1,"message":"597","line":78,"column":41,"nodeType":"499","messageId":"500","endLine":78,"endColumn":49},{"ruleId":"509","severity":1,"message":"598","line":97,"column":6,"nodeType":"513","endLine":97,"endColumn":8,"suggestions":"599"},{"ruleId":"509","severity":1,"message":"600","line":101,"column":6,"nodeType":"513","endLine":101,"endColumn":16,"suggestions":"601"},{"ruleId":"497","severity":1,"message":"519","line":5,"column":8,"nodeType":"499","messageId":"500","endLine":5,"endColumn":20},{"ruleId":"497","severity":1,"message":"602","line":14,"column":8,"nodeType":"499","messageId":"500","endLine":14,"endColumn":16},{"ruleId":"497","severity":1,"message":"521","line":16,"column":10,"nodeType":"499","messageId":"500","endLine":16,"endColumn":20},{"ruleId":"497","severity":1,"message":"522","line":16,"column":40,"nodeType":"499","messageId":"500","endLine":16,"endColumn":44},{"ruleId":"497","severity":1,"message":"523","line":16,"column":46,"nodeType":"499","messageId":"500","endLine":16,"endColumn":50},{"ruleId":"497","severity":1,"message":"603","line":2,"column":10,"nodeType":"499","messageId":"500","endLine":2,"endColumn":17},{"ruleId":"497","severity":1,"message":"604","line":6,"column":8,"nodeType":"499","messageId":"500","endLine":6,"endColumn":25},{"ruleId":"497","severity":1,"message":"605","line":9,"column":8,"nodeType":"499","messageId":"500","endLine":9,"endColumn":22},{"ruleId":"497","severity":1,"message":"521","line":11,"column":10,"nodeType":"499","messageId":"500","endLine":11,"endColumn":20},{"ruleId":"497","severity":1,"message":"535","line":11,"column":22,"nodeType":"499","messageId":"500","endLine":11,"endColumn":31},{"ruleId":"497","severity":1,"message":"592","line":11,"column":33,"nodeType":"499","messageId":"500","endLine":11,"endColumn":38},{"ruleId":"497","severity":1,"message":"522","line":11,"column":40,"nodeType":"499","messageId":"500","endLine":11,"endColumn":44},{"ruleId":"497","severity":1,"message":"545","line":11,"column":46,"nodeType":"499","messageId":"500","endLine":11,"endColumn":55},{"ruleId":"497","severity":1,"message":"606","line":85,"column":24,"nodeType":"499","messageId":"500","endLine":85,"endColumn":31},{"ruleId":"497","severity":1,"message":"594","line":6,"column":10,"nodeType":"499","messageId":"500","endLine":6,"endColumn":20},{"ruleId":"497","severity":1,"message":"593","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":25},{"ruleId":"497","severity":1,"message":"607","line":1,"column":27,"nodeType":"499","messageId":"500","endLine":1,"endColumn":36},{"ruleId":"497","severity":1,"message":"603","line":2,"column":38,"nodeType":"499","messageId":"500","endLine":2,"endColumn":45},{"ruleId":"497","severity":1,"message":"521","line":6,"column":10,"nodeType":"499","messageId":"500","endLine":6,"endColumn":20},{"ruleId":"497","severity":1,"message":"535","line":6,"column":22,"nodeType":"499","messageId":"500","endLine":6,"endColumn":31},{"ruleId":"497","severity":1,"message":"592","line":6,"column":33,"nodeType":"499","messageId":"500","endLine":6,"endColumn":38},{"ruleId":"497","severity":1,"message":"522","line":6,"column":40,"nodeType":"499","messageId":"500","endLine":6,"endColumn":44},{"ruleId":"497","severity":1,"message":"545","line":6,"column":46,"nodeType":"499","messageId":"500","endLine":6,"endColumn":55},{"ruleId":"497","severity":1,"message":"608","line":69,"column":24,"nodeType":"499","messageId":"500","endLine":69,"endColumn":32},{"ruleId":"497","severity":1,"message":"593","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":25},{"ruleId":"497","severity":1,"message":"609","line":2,"column":10,"nodeType":"499","messageId":"500","endLine":2,"endColumn":21},{"ruleId":"497","severity":1,"message":"594","line":3,"column":10,"nodeType":"499","messageId":"500","endLine":3,"endColumn":20},{"ruleId":"497","severity":1,"message":"542","line":4,"column":8,"nodeType":"499","messageId":"500","endLine":4,"endColumn":17},{"ruleId":"497","severity":1,"message":"575","line":5,"column":8,"nodeType":"499","messageId":"500","endLine":5,"endColumn":14},{"ruleId":"497","severity":1,"message":"610","line":6,"column":8,"nodeType":"499","messageId":"500","endLine":6,"endColumn":18},{"ruleId":"497","severity":1,"message":"611","line":7,"column":8,"nodeType":"499","messageId":"500","endLine":7,"endColumn":14},{"ruleId":"497","severity":1,"message":"612","line":8,"column":8,"nodeType":"499","messageId":"500","endLine":8,"endColumn":16},{"ruleId":"497","severity":1,"message":"613","line":9,"column":8,"nodeType":"499","messageId":"500","endLine":9,"endColumn":18},{"ruleId":"497","severity":1,"message":"578","line":11,"column":8,"nodeType":"499","messageId":"500","endLine":11,"endColumn":12},{"ruleId":"497","severity":1,"message":"614","line":13,"column":8,"nodeType":"499","messageId":"500","endLine":13,"endColumn":19},{"ruleId":"497","severity":1,"message":"576","line":14,"column":8,"nodeType":"499","messageId":"500","endLine":14,"endColumn":17},{"ruleId":"497","severity":1,"message":"615","line":15,"column":8,"nodeType":"499","messageId":"500","endLine":15,"endColumn":17},{"ruleId":"497","severity":1,"message":"616","line":16,"column":8,"nodeType":"499","messageId":"500","endLine":16,"endColumn":18},{"ruleId":"497","severity":1,"message":"617","line":17,"column":8,"nodeType":"499","messageId":"500","endLine":17,"endColumn":20},{"ruleId":"497","severity":1,"message":"618","line":18,"column":8,"nodeType":"499","messageId":"500","endLine":18,"endColumn":18},{"ruleId":"497","severity":1,"message":"498","line":19,"column":8,"nodeType":"499","messageId":"500","endLine":19,"endColumn":17},{"ruleId":"497","severity":1,"message":"595","line":20,"column":19,"nodeType":"499","messageId":"500","endLine":20,"endColumn":29},{"ruleId":"497","severity":1,"message":"537","line":21,"column":8,"nodeType":"499","messageId":"500","endLine":21,"endColumn":22},{"ruleId":"497","severity":1,"message":"619","line":23,"column":8,"nodeType":"499","messageId":"500","endLine":23,"endColumn":18},{"ruleId":"497","severity":1,"message":"620","line":24,"column":8,"nodeType":"499","messageId":"500","endLine":24,"endColumn":17},{"ruleId":"497","severity":1,"message":"621","line":26,"column":10,"nodeType":"499","messageId":"500","endLine":26,"endColumn":19},{"ruleId":"497","severity":1,"message":"622","line":27,"column":10,"nodeType":"499","messageId":"500","endLine":27,"endColumn":22},{"ruleId":"497","severity":1,"message":"521","line":30,"column":10,"nodeType":"499","messageId":"500","endLine":30,"endColumn":20},{"ruleId":"497","severity":1,"message":"535","line":30,"column":22,"nodeType":"499","messageId":"500","endLine":30,"endColumn":31},{"ruleId":"497","severity":1,"message":"592","line":30,"column":33,"nodeType":"499","messageId":"500","endLine":30,"endColumn":38},{"ruleId":"497","severity":1,"message":"522","line":30,"column":40,"nodeType":"499","messageId":"500","endLine":30,"endColumn":44},{"ruleId":"497","severity":1,"message":"545","line":30,"column":46,"nodeType":"499","messageId":"500","endLine":30,"endColumn":55},{"ruleId":"497","severity":1,"message":"623","line":30,"column":57,"nodeType":"499","messageId":"500","endLine":30,"endColumn":70},{"ruleId":"497","severity":1,"message":"624","line":94,"column":9,"nodeType":"499","messageId":"500","endLine":94,"endColumn":17},{"ruleId":"497","severity":1,"message":"596","line":104,"column":32,"nodeType":"499","messageId":"500","endLine":104,"endColumn":39},{"ruleId":"497","severity":1,"message":"597","line":104,"column":41,"nodeType":"499","messageId":"500","endLine":104,"endColumn":49},{"ruleId":"497","severity":1,"message":"625","line":106,"column":9,"nodeType":"499","messageId":"500","endLine":106,"endColumn":13},{"ruleId":"509","severity":1,"message":"626","line":124,"column":6,"nodeType":"513","endLine":124,"endColumn":16,"suggestions":"627"},{"ruleId":"497","severity":1,"message":"593","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":25},{"ruleId":"497","severity":1,"message":"607","line":1,"column":27,"nodeType":"499","messageId":"500","endLine":1,"endColumn":36},{"ruleId":"497","severity":1,"message":"603","line":2,"column":38,"nodeType":"499","messageId":"500","endLine":2,"endColumn":45},{"ruleId":"497","severity":1,"message":"628","line":4,"column":8,"nodeType":"499","messageId":"500","endLine":4,"endColumn":13},{"ruleId":"497","severity":1,"message":"522","line":7,"column":40,"nodeType":"499","messageId":"500","endLine":7,"endColumn":44},{"ruleId":"497","severity":1,"message":"545","line":7,"column":46,"nodeType":"499","messageId":"500","endLine":7,"endColumn":55},{"ruleId":"497","severity":1,"message":"623","line":7,"column":57,"nodeType":"499","messageId":"500","endLine":7,"endColumn":70},{"ruleId":"497","severity":1,"message":"629","line":51,"column":17,"nodeType":"499","messageId":"500","endLine":51,"endColumn":22},{"ruleId":"497","severity":1,"message":"608","line":51,"column":24,"nodeType":"499","messageId":"500","endLine":51,"endColumn":32},{"ruleId":"497","severity":1,"message":"630","line":51,"column":34,"nodeType":"499","messageId":"500","endLine":51,"endColumn":42},{"ruleId":"515","severity":1,"message":"516","line":82,"column":1,"nodeType":"517","messageId":"518","endLine":84,"endColumn":2},{"ruleId":"497","severity":1,"message":"593","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":25},{"ruleId":"497","severity":1,"message":"607","line":1,"column":27,"nodeType":"499","messageId":"500","endLine":1,"endColumn":36},{"ruleId":"497","severity":1,"message":"609","line":2,"column":10,"nodeType":"499","messageId":"500","endLine":2,"endColumn":21},{"ruleId":"497","severity":1,"message":"631","line":2,"column":23,"nodeType":"499","messageId":"500","endLine":2,"endColumn":34},{"ruleId":"497","severity":1,"message":"532","line":3,"column":22,"nodeType":"499","messageId":"500","endLine":3,"endColumn":32},{"ruleId":"497","severity":1,"message":"542","line":4,"column":8,"nodeType":"499","messageId":"500","endLine":4,"endColumn":17},{"ruleId":"497","severity":1,"message":"575","line":5,"column":8,"nodeType":"499","messageId":"500","endLine":5,"endColumn":14},{"ruleId":"497","severity":1,"message":"610","line":6,"column":8,"nodeType":"499","messageId":"500","endLine":6,"endColumn":18},{"ruleId":"497","severity":1,"message":"611","line":7,"column":8,"nodeType":"499","messageId":"500","endLine":7,"endColumn":14},{"ruleId":"497","severity":1,"message":"612","line":8,"column":8,"nodeType":"499","messageId":"500","endLine":8,"endColumn":16},{"ruleId":"497","severity":1,"message":"632","line":10,"column":13,"nodeType":"499","messageId":"500","endLine":10,"endColumn":16},{"ruleId":"497","severity":1,"message":"578","line":11,"column":8,"nodeType":"499","messageId":"500","endLine":11,"endColumn":12},{"ruleId":"497","severity":1,"message":"633","line":12,"column":10,"nodeType":"499","messageId":"500","endLine":12,"endColumn":21},{"ruleId":"497","severity":1,"message":"614","line":13,"column":8,"nodeType":"499","messageId":"500","endLine":13,"endColumn":19},{"ruleId":"497","severity":1,"message":"576","line":14,"column":8,"nodeType":"499","messageId":"500","endLine":14,"endColumn":17},{"ruleId":"497","severity":1,"message":"615","line":15,"column":8,"nodeType":"499","messageId":"500","endLine":15,"endColumn":17},{"ruleId":"497","severity":1,"message":"616","line":16,"column":8,"nodeType":"499","messageId":"500","endLine":16,"endColumn":18},{"ruleId":"497","severity":1,"message":"498","line":19,"column":8,"nodeType":"499","messageId":"500","endLine":19,"endColumn":17},{"ruleId":"497","severity":1,"message":"603","line":20,"column":10,"nodeType":"499","messageId":"500","endLine":20,"endColumn":17},{"ruleId":"497","severity":1,"message":"595","line":20,"column":19,"nodeType":"499","messageId":"500","endLine":20,"endColumn":29},{"ruleId":"497","severity":1,"message":"634","line":20,"column":31,"nodeType":"499","messageId":"500","endLine":20,"endColumn":43},{"ruleId":"497","severity":1,"message":"537","line":21,"column":8,"nodeType":"499","messageId":"500","endLine":21,"endColumn":22},{"ruleId":"497","severity":1,"message":"635","line":22,"column":8,"nodeType":"499","messageId":"500","endLine":22,"endColumn":16},{"ruleId":"497","severity":1,"message":"619","line":23,"column":8,"nodeType":"499","messageId":"500","endLine":23,"endColumn":18},{"ruleId":"497","severity":1,"message":"620","line":24,"column":8,"nodeType":"499","messageId":"500","endLine":24,"endColumn":17},{"ruleId":"497","severity":1,"message":"636","line":25,"column":8,"nodeType":"499","messageId":"500","endLine":25,"endColumn":17},{"ruleId":"497","severity":1,"message":"621","line":26,"column":10,"nodeType":"499","messageId":"500","endLine":26,"endColumn":19},{"ruleId":"497","severity":1,"message":"622","line":27,"column":10,"nodeType":"499","messageId":"500","endLine":27,"endColumn":22},{"ruleId":"497","severity":1,"message":"637","line":28,"column":10,"nodeType":"499","messageId":"500","endLine":28,"endColumn":25},{"ruleId":"497","severity":1,"message":"638","line":28,"column":27,"nodeType":"499","messageId":"500","endLine":28,"endColumn":49},{"ruleId":"497","severity":1,"message":"639","line":29,"column":10,"nodeType":"499","messageId":"500","endLine":29,"endColumn":22},{"ruleId":"497","severity":1,"message":"521","line":30,"column":10,"nodeType":"499","messageId":"500","endLine":30,"endColumn":20},{"ruleId":"497","severity":1,"message":"535","line":30,"column":22,"nodeType":"499","messageId":"500","endLine":30,"endColumn":31},{"ruleId":"497","severity":1,"message":"522","line":30,"column":40,"nodeType":"499","messageId":"500","endLine":30,"endColumn":44},{"ruleId":"497","severity":1,"message":"545","line":30,"column":46,"nodeType":"499","messageId":"500","endLine":30,"endColumn":55},{"ruleId":"497","severity":1,"message":"623","line":30,"column":57,"nodeType":"499","messageId":"500","endLine":30,"endColumn":70},{"ruleId":"497","severity":1,"message":"532","line":2,"column":22,"nodeType":"499","messageId":"500","endLine":2,"endColumn":32},{"ruleId":"497","severity":1,"message":"640","line":1,"column":38,"nodeType":"499","messageId":"500","endLine":1,"endColumn":44},{"ruleId":"497","severity":1,"message":"609","line":2,"column":10,"nodeType":"499","messageId":"500","endLine":2,"endColumn":21},{"ruleId":"497","severity":1,"message":"631","line":2,"column":23,"nodeType":"499","messageId":"500","endLine":2,"endColumn":34},{"ruleId":"497","severity":1,"message":"578","line":5,"column":8,"nodeType":"499","messageId":"500","endLine":5,"endColumn":12},{"ruleId":"497","severity":1,"message":"498","line":7,"column":8,"nodeType":"499","messageId":"500","endLine":7,"endColumn":17},{"ruleId":"497","severity":1,"message":"595","line":8,"column":19,"nodeType":"499","messageId":"500","endLine":8,"endColumn":29},{"ruleId":"497","severity":1,"message":"641","line":10,"column":21,"nodeType":"499","messageId":"500","endLine":10,"endColumn":42},{"ruleId":"497","severity":1,"message":"638","line":11,"column":27,"nodeType":"499","messageId":"500","endLine":11,"endColumn":49},{"ruleId":"497","severity":1,"message":"639","line":12,"column":10,"nodeType":"499","messageId":"500","endLine":12,"endColumn":22},{"ruleId":"497","severity":1,"message":"521","line":13,"column":10,"nodeType":"499","messageId":"500","endLine":13,"endColumn":20},{"ruleId":"497","severity":1,"message":"535","line":13,"column":22,"nodeType":"499","messageId":"500","endLine":13,"endColumn":31},{"ruleId":"497","severity":1,"message":"592","line":13,"column":33,"nodeType":"499","messageId":"500","endLine":13,"endColumn":38},{"ruleId":"497","severity":1,"message":"522","line":13,"column":40,"nodeType":"499","messageId":"500","endLine":13,"endColumn":44},{"ruleId":"497","severity":1,"message":"545","line":13,"column":46,"nodeType":"499","messageId":"500","endLine":13,"endColumn":55},{"ruleId":"497","severity":1,"message":"623","line":13,"column":57,"nodeType":"499","messageId":"500","endLine":13,"endColumn":70},{"ruleId":"497","severity":1,"message":"642","line":16,"column":8,"nodeType":"499","messageId":"500","endLine":16,"endColumn":14},{"ruleId":"497","severity":1,"message":"643","line":17,"column":23,"nodeType":"499","messageId":"500","endLine":17,"endColumn":35},{"ruleId":"497","severity":1,"message":"534","line":17,"column":37,"nodeType":"499","messageId":"500","endLine":17,"endColumn":51},{"ruleId":"497","severity":1,"message":"644","line":18,"column":26,"nodeType":"499","messageId":"500","endLine":18,"endColumn":44},{"ruleId":"509","severity":1,"message":"645","line":116,"column":6,"nodeType":"513","endLine":116,"endColumn":16,"suggestions":"646"},{"ruleId":"497","severity":1,"message":"520","line":11,"column":8,"nodeType":"499","messageId":"500","endLine":11,"endColumn":18},{"ruleId":"497","severity":1,"message":"521","line":15,"column":10,"nodeType":"499","messageId":"500","endLine":15,"endColumn":20},{"ruleId":"497","severity":1,"message":"522","line":15,"column":40,"nodeType":"499","messageId":"500","endLine":15,"endColumn":44},{"ruleId":"497","severity":1,"message":"523","line":15,"column":46,"nodeType":"499","messageId":"500","endLine":15,"endColumn":50},{"ruleId":"497","severity":1,"message":"521","line":1,"column":10,"nodeType":"499","messageId":"500","endLine":1,"endColumn":20},{"ruleId":"497","severity":1,"message":"535","line":1,"column":22,"nodeType":"499","messageId":"500","endLine":1,"endColumn":31},{"ruleId":"497","severity":1,"message":"592","line":1,"column":33,"nodeType":"499","messageId":"500","endLine":1,"endColumn":38},{"ruleId":"497","severity":1,"message":"522","line":1,"column":40,"nodeType":"499","messageId":"500","endLine":1,"endColumn":44},{"ruleId":"497","severity":1,"message":"545","line":1,"column":46,"nodeType":"499","messageId":"500","endLine":1,"endColumn":55},{"ruleId":"497","severity":1,"message":"623","line":1,"column":57,"nodeType":"499","messageId":"500","endLine":1,"endColumn":70},{"ruleId":"497","severity":1,"message":"536","line":2,"column":10,"nodeType":"499","messageId":"500","endLine":2,"endColumn":22},{"ruleId":"497","severity":1,"message":"631","line":2,"column":24,"nodeType":"499","messageId":"500","endLine":2,"endColumn":35},{"ruleId":"497","severity":1,"message":"542","line":9,"column":8,"nodeType":"499","messageId":"500","endLine":9,"endColumn":17},{"ruleId":"497","severity":1,"message":"618","line":13,"column":10,"nodeType":"499","messageId":"500","endLine":13,"endColumn":20},{"ruleId":"497","severity":1,"message":"534","line":14,"column":31,"nodeType":"499","messageId":"500","endLine":14,"endColumn":45},{"ruleId":"497","severity":1,"message":"643","line":14,"column":47,"nodeType":"499","messageId":"500","endLine":14,"endColumn":59},{"ruleId":"497","severity":1,"message":"644","line":16,"column":26,"nodeType":"499","messageId":"500","endLine":16,"endColumn":44},{"ruleId":"497","severity":1,"message":"647","line":107,"column":15,"nodeType":"499","messageId":"500","endLine":107,"endColumn":23},{"ruleId":"509","severity":1,"message":"648","line":124,"column":6,"nodeType":"513","endLine":124,"endColumn":17,"suggestions":"649"},{"ruleId":"509","severity":1,"message":"650","line":138,"column":6,"nodeType":"513","endLine":138,"endColumn":16,"suggestions":"651"},{"ruleId":"497","severity":1,"message":"593","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":25},{"ruleId":"497","severity":1,"message":"498","line":6,"column":8,"nodeType":"499","messageId":"500","endLine":6,"endColumn":17},{"ruleId":"497","severity":1,"message":"595","line":7,"column":19,"nodeType":"499","messageId":"500","endLine":7,"endColumn":29},{"ruleId":"497","severity":1,"message":"537","line":8,"column":8,"nodeType":"499","messageId":"500","endLine":8,"endColumn":22},{"ruleId":"497","severity":1,"message":"542","line":10,"column":8,"nodeType":"499","messageId":"500","endLine":10,"endColumn":17},{"ruleId":"497","severity":1,"message":"637","line":16,"column":10,"nodeType":"499","messageId":"500","endLine":16,"endColumn":25},{"ruleId":"497","severity":1,"message":"638","line":16,"column":27,"nodeType":"499","messageId":"500","endLine":16,"endColumn":49},{"ruleId":"497","severity":1,"message":"539","line":17,"column":8,"nodeType":"499","messageId":"500","endLine":17,"endColumn":17},{"ruleId":"497","severity":1,"message":"652","line":64,"column":25,"nodeType":"499","messageId":"500","endLine":64,"endColumn":30},{"ruleId":"497","severity":1,"message":"596","line":64,"column":32,"nodeType":"499","messageId":"500","endLine":64,"endColumn":39},{"ruleId":"497","severity":1,"message":"597","line":64,"column":41,"nodeType":"499","messageId":"500","endLine":64,"endColumn":49},{"ruleId":"497","severity":1,"message":"653","line":64,"column":76,"nodeType":"499","messageId":"500","endLine":64,"endColumn":87},{"ruleId":"497","severity":1,"message":"654","line":67,"column":9,"nodeType":"499","messageId":"500","endLine":67,"endColumn":11},{"ruleId":"497","severity":1,"message":"655","line":68,"column":9,"nodeType":"499","messageId":"500","endLine":68,"endColumn":14},{"ruleId":"509","severity":1,"message":"512","line":86,"column":6,"nodeType":"513","endLine":86,"endColumn":8,"suggestions":"656"},{"ruleId":"509","severity":1,"message":"657","line":93,"column":6,"nodeType":"513","endLine":93,"endColumn":24,"suggestions":"658"},{"ruleId":"497","severity":1,"message":"534","line":2,"column":64,"nodeType":"499","messageId":"500","endLine":2,"endColumn":78},{"ruleId":"497","severity":1,"message":"528","line":4,"column":10,"nodeType":"499","messageId":"500","endLine":4,"endColumn":34},{"ruleId":"497","severity":1,"message":"529","line":4,"column":36,"nodeType":"499","messageId":"500","endLine":4,"endColumn":60},"no-native-reassign",["659"],"no-negated-in-lhs",["660"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'useTheme' is defined but never used.","'ChevronRightIcon' is defined but never used.","'Cv' is defined but never used.","'DocViewer' is defined but never used.","'SIDE_PANEL_WIDTH_WIDE' is defined but never used.","'SIDE_PANEL_WIDTH_SHORT' is defined but never used.","'HEADER_MARGIN' is defined but never used.","'myClasses' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["661"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'ListItemIcon' is defined but never used.","'FolderIcon' is defined but never used.","'LIGHT_BLUE' is defined but never used.","'DARK' is defined but never used.","'LIME' is defined but never used.",["659"],["660"],"'List' is defined but never used.","'Form' is defined but never used.","'convertJsonToEditorState' is defined but never used.","'convertEditorStateToJson' is defined but never used.","'useStyles' is assigned a value but never used.",["662"],"'withStyles' is defined but never used.","'convertEditorContentToJson' is defined but never used.","'convertFromRaw' is defined but never used.","'DARK_BLUE' is defined but never used.","'shallowEqual' is defined but never used.","'InputTextField' is defined but never used.","'Template' is defined but never used.","'FormTitle' is defined but never used.",["663"],"'UPDATE_SELECTED_CV' is defined but never used.","'TextField' is defined but never used.","'FilledInput' is defined but never used.","'FileBase64' is defined but never used.","'RED_ERROR' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['nameVisit'] found.","Property","unnecessarilyComputedProperty",{"range":"664","text":"665"},"Unnecessarily computed property ['descriptionVisit'] found.",{"range":"666","text":"667"},"Unnecessarily computed property ['fileVisit'] found.",{"range":"668","text":"669"},"Unnecessarily computed property ['fileError'] found.",{"range":"670","text":"671"},{"range":"672","text":"669"},{"range":"673","text":"665"},{"range":"674","text":"667"},"React Hook useEffect has a missing dependency: 'validate'. Either include it or remove the dependency array.",["675"],["676"],["677"],["678"],"Unnecessarily computed property ['nameError'] found.",{"range":"679","text":"680"},{"range":"681","text":"680"},"Unnecessarily computed property ['descriptionError'] found.",{"range":"682","text":"683"},{"range":"684","text":"683"},{"range":"685","text":"671"},{"range":"686","text":"671"},["659"],["660"],"'Button' is defined but never used.","'CheckIcon' is defined but never used.","'TextareaAutosize' is defined but never used.","'clsx' is defined but never used.",{"range":"687","text":"665"},"Unnecessarily computed property ['contentVisit'] found.",{"range":"688","text":"689"},{"range":"690","text":"665"},{"range":"691","text":"689"},["692"],["693"],["694"],{"range":"695","text":"680"},{"range":"696","text":"680"},"Unnecessarily computed property ['contentError'] found.",{"range":"697","text":"698"},{"range":"699","text":"698"},"'LIGHT' is defined but never used.","'useState' is defined but never used.","'makeStyles' is defined but never used.","'Controller' is defined but never used.","'control' is assigned a value but never used.","'register' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'coverList.length', 'cvList.length', and 'dispatch'. Either include them or remove the dependency array.",["700"],"React Hook useEffect has missing dependencies: 'initCoverId', 'initCvId', 'initDescription', and 'reset'. Either include them or remove the dependency array.",["701"],"'FileIcon' is defined but never used.","'useForm' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'InputAdornment' is defined but never used.","'options' is assigned a value but never used.","'useEffect' is defined but never used.","'required' is assigned a value but never used.","'useSelector' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'IconButton' is defined but never used.","'FormControl' is defined but never used.","'ErrorIcon' is defined but never used.","'UploadIcon' is defined but never used.","'TopArrowIcon' is defined but never used.","'Typography' is defined but never used.","'FormSelect' is defined but never used.","'FileInput' is defined but never used.","'getAllCvs' is defined but never used.","'getAllCovers' is defined but never used.","'GREEN_SUCCESS' is defined but never used.","'dispatch' is assigned a value but never used.","'file' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initDescription', 'initFile', and 'reset'. Either include them or remove the dependency array.",["702"],"'Input' is defined but never used.","'label' is assigned a value but never used.","'onChange' is assigned a value but never used.","'useDispatch' is defined but never used.","'yup' is defined but never used.","'yupResolver' is defined but never used.","'FormProvider' is defined but never used.","'MyButton' is defined but never used.","'FormInput' is defined but never used.","'MAX_NAME_LENGTH' is defined but never used.","'MAX_DESCRIPTION_LENGTH' is defined but never used.","'FILE_FORMATS' is defined but never used.","'useRef' is defined but never used.","'FormInputUnControlled' is defined but never used.","'parser' is defined but never used.","'convertToRaw' is defined but never used.","'FormRichTextEditor' is defined but never used.","React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.",["703"],"'response' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'contentState', 'data.from', 'data.subject', 'data.to', and 'selectedCv.file'. Either include them or remove the dependency array.",["704"],"React Hook useEffect has a missing dependency: 'contentState'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setInitContentState' needs the current value of 'contentState'.",["705"],"'reset' is assigned a value but never used.","'clearErrors' is assigned a value but never used.","'cv' is assigned a value but never used.","'cover' is assigned a value but never used.",["706"],"React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["707"],"no-global-assign","no-unsafe-negation",{"desc":"708","fix":"709"},{"desc":"708","fix":"710"},{"desc":"708","fix":"711"},[2923,2936],"'nameVisit'",[3094,3114],"'descriptionVisit'",[3286,3299],"'fileVisit'",[3390,3403],"'fileError'",[3617,3630],[3647,3660],[3677,3697],{"desc":"712","fix":"713"},{"desc":"714","fix":"715"},{"desc":"716","fix":"717"},{"desc":"718","fix":"719"},[5043,5056],"'nameError'",[5159,5172],[5426,5446],"'descriptionError'",[5556,5576],[5778,5791],[5894,5907],[1938,1951],[2101,2117],"'contentVisit'",[2319,2332],[2349,2365],{"desc":"714","fix":"720"},{"desc":"721","fix":"722"},{"desc":"718","fix":"723"},[3318,3331],[3434,3447],[3637,3653],"'contentError'",[3763,3779],{"desc":"724","fix":"725"},{"desc":"726","fix":"727"},{"desc":"728","fix":"729"},{"desc":"730","fix":"731"},{"desc":"732","fix":"733"},{"desc":"734","fix":"735"},{"desc":"708","fix":"736"},{"desc":"737","fix":"738"},"Update the dependencies array to be: [dispatch]",{"range":"739","text":"740"},{"range":"741","text":"740"},{"range":"742","text":"740"},"Update the dependencies array to be: [file, validate]",{"range":"743","text":"744"},"Update the dependencies array to be: [name, validate]",{"range":"745","text":"746"},"Update the dependencies array to be: [description, validate]",{"range":"747","text":"748"},"Update the dependencies array to be: [validate, visited]",{"range":"749","text":"750"},{"range":"751","text":"746"},"Update the dependencies array to be: [content, validate]",{"range":"752","text":"753"},{"range":"754","text":"750"},"Update the dependencies array to be: [coverList.length, cvList.length, dispatch]",{"range":"755","text":"756"},"Update the dependencies array to be: [initCoverId, initCvId, initDescription, initName, reset]",{"range":"757","text":"758"},"Update the dependencies array to be: [initDescription, initFile, initName, reset]",{"range":"759","text":"760"},"Update the dependencies array to be: [initName, reset]",{"range":"761","text":"762"},"Update the dependencies array to be: [contentState, data.from, data.subject, data.to, isSending, selectedCv.file]",{"range":"763","text":"764"},"Update the dependencies array to be: [contentState, editMode]",{"range":"765","text":"766"},{"range":"767","text":"740"},"Update the dependencies array to be: [selectedTemplate, setValue]",{"range":"768","text":"769"},[2419,2421],"[dispatch]",[2243,2245],[2190,2192],[3973,3979],"[file, validate]",[4034,4040],"[name, validate]",[4102,4115],"[description, validate]",[4223,4232],"[validate, visited]",[2570,2576],[2634,2643],"[content, validate]",[2724,2733],[3070,3072],"[coverList.length, cvList.length, dispatch]",[3212,3222],"[initCoverId, initCvId, initDescription, initName, reset]",[4270,4280],"[initDescription, initFile, initName, reset]",[3534,3544],"[initName, reset]",[3658,3669],"[contentState, data.from, data.subject, data.to, isSending, selectedCv.file]",[4060,4070],"[contentState, editMode]",[2986,2988],[3150,3168],"[selectedTemplate, setValue]"]