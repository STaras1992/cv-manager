[{"C:\\Projects\\CvManager\\cv-manager\\src\\index.js":"1","C:\\Projects\\CvManager\\cv-manager\\src\\App.js":"2","C:\\Projects\\CvManager\\cv-manager\\src\\utills\\menu.js":"3","C:\\Projects\\CvManager\\cv-manager\\src\\consts\\measures.js":"4","C:\\Projects\\CvManager\\cv-manager\\src\\components\\Nav\\Nav.js":"5","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CvPanel\\CvPanel.js":"6","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CoverPanel\\CoverPanel.js":"7","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CoverPanel\\Cover\\Cover.js":"8","C:\\Projects\\CvManager\\cv-manager\\src\\components\\TemplatePanel\\TemplatePanel.js":"9","C:\\Projects\\CvManager\\cv-manager\\src\\actions\\cvActions.js":"10","C:\\Projects\\CvManager\\cv-manager\\src\\consts\\actionTypes.js":"11","C:\\Projects\\CvManager\\cv-manager\\src\\api\\api.js":"12","C:\\Projects\\CvManager\\cv-manager\\src\\Store.js":"13","C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\coverReducer.js":"14","C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\templateReducer.js":"15","C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\cvReducer.js":"16","C:\\Projects\\CvManager\\cv-manager\\src\\actions\\coverActions.js":"17","C:\\Projects\\CvManager\\cv-manager\\src\\consts\\colors.js":"18","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\MyButton.js":"19","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\DocViewer.js":"20","C:\\Projects\\CvManager\\cv-manager\\src\\actions\\optionsActions.js":"21","C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\optionsReducer.js":"22","C:\\Projects\\CvManager\\cv-manager\\src\\styles\\panelStyle.js":"23","C:\\Projects\\CvManager\\cv-manager\\src\\components\\TemplatePanel\\TemplateForm.js":"24","C:\\Projects\\CvManager\\cv-manager\\src\\actions\\templateActions.js":"25","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormSelect.js":"26","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormInput.js":"27","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CvPanel\\CvForm.js":"28","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FileInput.js":"29","C:\\Projects\\CvManager\\cv-manager\\src\\consts\\structs.js":"30","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormTitle.js":"31","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormFileInput.js":"32","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CoverPanel\\CoverForm.js":"33","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\DocListItem.js":"34","C:\\Projects\\CvManager\\cv-manager\\src\\styles\\formStyle.js":"35","C:\\Projects\\CvManager\\cv-manager\\src\\components\\SendMailPage\\SendMailPage.js":"36","C:\\Projects\\CvManager\\cv-manager\\src\\components\\SendMailPage\\SendForm.js":"37","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\RichTextEditor.js":"38","C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\userReducer.js":"39","C:\\Projects\\CvManager\\cv-manager\\src\\utills\\editorUtils.js":"40","C:\\Projects\\CvManager\\cv-manager\\src\\utills\\html.js":"41","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\MyCheckBox.js":"42","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\MyToolTip.js":"43","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\MySwitch.js":"44","C:\\Projects\\CvManager\\cv-manager\\src\\components\\HomePage\\HomePage.js":"45","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\HorizontalCard.js":"46","C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\emailReducer.js":"47","C:\\Projects\\CvManager\\cv-manager\\src\\actions\\emailActions.js":"48","C:\\Projects\\CvManager\\cv-manager\\src\\components\\SignUp\\SignUp.js":"49","C:\\Projects\\CvManager\\cv-manager\\src\\components\\Login\\Login.js":"50","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormInputLogin.js":"51","C:\\Projects\\CvManager\\cv-manager\\src\\actions\\userActions.js":"52","C:\\Projects\\CvManager\\cv-manager\\src\\utills\\cookies.js":"53","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\PrivateRoute.js":"54","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\ConfirmDialog.js":"55","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\Alert.js":"56","C:\\Projects\\CvManager\\cv-manager\\src\\consts\\strings.js":"57","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\BiSwitch.js":"58","C:\\Projects\\CvManager\\cv-manager\\src\\utills\\actionsUtils.js":"59"},{"size":382,"mtime":1609755160917,"results":"60","hashOfConfig":"61"},{"size":1660,"mtime":1611937695208,"results":"62","hashOfConfig":"61"},{"size":663,"mtime":1611161153774,"results":"63","hashOfConfig":"61"},{"size":239,"mtime":1610179604113,"results":"64","hashOfConfig":"61"},{"size":7093,"mtime":1611937748508,"results":"65","hashOfConfig":"61"},{"size":5320,"mtime":1611948879781,"results":"66","hashOfConfig":"61"},{"size":5443,"mtime":1611947804120,"results":"67","hashOfConfig":"61"},{"size":5108,"mtime":1611936847049,"results":"68","hashOfConfig":"61"},{"size":5398,"mtime":1611948646348,"results":"69","hashOfConfig":"61"},{"size":5353,"mtime":1611946604534,"results":"70","hashOfConfig":"61"},{"size":2514,"mtime":1611425775718,"results":"71","hashOfConfig":"61"},{"size":2210,"mtime":1611863368409,"results":"72","hashOfConfig":"61"},{"size":747,"mtime":1611134771070,"results":"73","hashOfConfig":"61"},{"size":1691,"mtime":1611827209646,"results":"74","hashOfConfig":"61"},{"size":1752,"mtime":1611429179139,"results":"75","hashOfConfig":"61"},{"size":1588,"mtime":1611827195878,"results":"76","hashOfConfig":"61"},{"size":2883,"mtime":1611948336538,"results":"77","hashOfConfig":"61"},{"size":392,"mtime":1611504737696,"results":"78","hashOfConfig":"61"},{"size":1728,"mtime":1611827279640,"results":"79","hashOfConfig":"61"},{"size":323,"mtime":1611822811867,"results":"80","hashOfConfig":"61"},{"size":509,"mtime":1611426217260,"results":"81","hashOfConfig":"61"},{"size":1009,"mtime":1611425919479,"results":"82","hashOfConfig":"61"},{"size":838,"mtime":1611665519657,"results":"83","hashOfConfig":"61"},{"size":4680,"mtime":1611821331140,"results":"84","hashOfConfig":"61"},{"size":2979,"mtime":1611948394115,"results":"85","hashOfConfig":"61"},{"size":2722,"mtime":1611936546234,"results":"86","hashOfConfig":"61"},{"size":2313,"mtime":1611827266387,"results":"87","hashOfConfig":"61"},{"size":5257,"mtime":1611944967547,"results":"88","hashOfConfig":"61"},{"size":2031,"mtime":1611827261645,"results":"89","hashOfConfig":"61"},{"size":160,"mtime":1611688423117,"results":"90","hashOfConfig":"61"},{"size":1283,"mtime":1611827275353,"results":"91","hashOfConfig":"61"},{"size":1436,"mtime":1611827263700,"results":"92","hashOfConfig":"61"},{"size":4936,"mtime":1611822331800,"results":"93","hashOfConfig":"61"},{"size":5410,"mtime":1611920784788,"results":"94","hashOfConfig":"61"},{"size":362,"mtime":1611827136763,"results":"95","hashOfConfig":"61"},{"size":8568,"mtime":1611826215570,"results":"96","hashOfConfig":"61"},{"size":4303,"mtime":1611827929800,"results":"97","hashOfConfig":"61"},{"size":5990,"mtime":1611936562692,"results":"98","hashOfConfig":"61"},{"size":946,"mtime":1611938431360,"results":"99","hashOfConfig":"61"},{"size":3096,"mtime":1611759247579,"results":"100","hashOfConfig":"61"},{"size":1519,"mtime":1611827929275,"results":"101","hashOfConfig":"61"},{"size":1120,"mtime":1611823294574,"results":"102","hashOfConfig":"61"},{"size":940,"mtime":1611827286070,"results":"103","hashOfConfig":"61"},{"size":1728,"mtime":1611827283908,"results":"104","hashOfConfig":"61"},{"size":5887,"mtime":1611821615469,"results":"105","hashOfConfig":"61"},{"size":2382,"mtime":1611827277466,"results":"106","hashOfConfig":"61"},{"size":856,"mtime":1611827238267,"results":"107","hashOfConfig":"61"},{"size":1815,"mtime":1611948333779,"results":"108","hashOfConfig":"61"},{"size":6139,"mtime":1611944930077,"results":"109","hashOfConfig":"61"},{"size":5416,"mtime":1611944934391,"results":"110","hashOfConfig":"61"},{"size":1890,"mtime":1611935687749,"results":"111","hashOfConfig":"61"},{"size":2328,"mtime":1611944619218,"results":"112","hashOfConfig":"61"},{"size":289,"mtime":1611334754024,"results":"113","hashOfConfig":"61"},{"size":586,"mtime":1611940315180,"results":"114","hashOfConfig":"61"},{"size":3129,"mtime":1611827253564,"results":"115","hashOfConfig":"61"},{"size":198,"mtime":1611827249393,"results":"116","hashOfConfig":"61"},{"size":281,"mtime":1611945928635,"results":"117","hashOfConfig":"61"},{"size":1272,"mtime":1611827251511,"results":"118","hashOfConfig":"61"},{"size":470,"mtime":1611948458986,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"wg62lo",{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"122"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"122"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"122"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"122"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"162"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\CvManager\\cv-manager\\src\\index.js",[],["245","246"],"C:\\Projects\\CvManager\\cv-manager\\src\\App.js",["247"],"C:\\Projects\\CvManager\\cv-manager\\src\\utills\\menu.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\consts\\measures.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\Nav\\Nav.js",["248","249"],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ProfileIcon from '@material-ui/icons/AccountCircle';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { getMenuItems } from '../../utills/menu.js';\r\nimport { SIDE_PANEL_WIDTH_WIDE, SIDE_PANEL_WIDTH_SHORT } from '../../consts/measures.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { openSidePanel, closeSidePanel } from '../../actions/optionsActions.js';\r\nimport { logout } from '../../actions/userActions.js';\r\nimport { LIGHT, LIME } from '../../consts/colors.js';\r\nimport { showErrorOff } from '../../actions/optionsActions.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n\r\n  header: {\r\n    background: '#363795',\r\n    background: ' -webkit-linear-gradient(to right, #005c97, #363795)',\r\n    background: 'linear-gradient(to right, #005c97, #363795)',\r\n\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  appBar: {\r\n    minHeight: '64px',\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n\r\n  appBarShift: {\r\n    marginLeft: SIDE_PANEL_WIDTH_WIDE,\r\n    width: `calc(100% - ${SIDE_PANEL_WIDTH_WIDE}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n\r\n  drawer: {\r\n    width: SIDE_PANEL_WIDTH_WIDE,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n\r\n  drawerOpen: {\r\n    width: SIDE_PANEL_WIDTH_WIDE,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n\r\n  drawerClose: {\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: SIDE_PANEL_WIDTH_SHORT,\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  profile: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  profileIcon: {\r\n    '& svg': {\r\n      fontSize: '36px',\r\n      color: LIME,\r\n      transition: 'all 0.8s ease-in-out',\r\n    },\r\n  },\r\n  profileDisabled: {\r\n    '& svg': {\r\n      color: LIGHT,\r\n    },\r\n  },\r\n  actionButton: {\r\n    transition: 'all 0.3s ease-in-out',\r\n    '&:hover': {\r\n      color: LIME,\r\n    },\r\n  },\r\n  loginButton: {\r\n    '&:hover': {\r\n      textDecoration: 'overline',\r\n    },\r\n  },\r\n  signupButton: {\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  hide: {\r\n    // display: 'none',\r\n    visibility: 'hidden',\r\n  },\r\n}));\r\n\r\nconst Nav = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const open = useSelector((state) => state.options.isSidePanelOpen);\r\n  const [menuItems] = useState(getMenuItems());\r\n  const isLoggedIn = useSelector((state) => state.user.isLoggedIn);\r\n\r\n  const handleDrawerOpen = () => {\r\n    dispatch(openSidePanel);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    dispatch(closeSidePanel);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const handlePageChange = () => {\r\n    dispatch(showErrorOff);\r\n  };\r\n\r\n  const menuListItems = menuItems.map((item) => (\r\n    <ListItem button key={item.name} component={Link} to={item.to} onClick={handlePageChange}>\r\n      <ListItemIcon>{item.icon}</ListItemIcon>\r\n      <ListItemText primary={item.name} />\r\n    </ListItem>\r\n  ));\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position='fixed'\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar className={classes.header}>\r\n          <IconButton\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n            onClick={handleDrawerOpen}\r\n            edge='start'\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <div className={classes.profile}>\r\n            <div\r\n              className={clsx({\r\n                [classes.hide]: isLoggedIn === null,\r\n              })}\r\n            >\r\n              {isLoggedIn ? (\r\n                <Button color='inherit' onClick={handleLogout}>\r\n                  Logout\r\n                </Button>\r\n              ) : (\r\n                <div>\r\n                  <Button\r\n                    className={clsx(classes.actionButton, classes.signupButton)}\r\n                    component={Link}\r\n                    to='/signup'\r\n                    color='inherit'\r\n                  >\r\n                    Sign up\r\n                  </Button>\r\n                  <Button\r\n                    className={clsx(classes.actionButton, classes.loginButton)}\r\n                    component={Link}\r\n                    to='/login'\r\n                    color='inherit'\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <IconButton\r\n              classes={{ root: classes.profileIcon, disabled: classes.profileDisabled }}\r\n              disabled={!isLoggedIn}\r\n            >\r\n              <ProfileIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer\r\n        variant='permanent'\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{menuListItems}</List>\r\n        <Divider />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\CvPanel\\CvPanel.js",["250","251","252"],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\CoverPanel\\CoverPanel.js",["253","254","255"],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\CoverPanel\\Cover\\Cover.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\TemplatePanel\\TemplatePanel.js",["256","257","258"],"C:\\Projects\\CvManager\\cv-manager\\src\\actions\\cvActions.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\consts\\actionTypes.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\api\\api.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\Store.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\coverReducer.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\templateReducer.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\cvReducer.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\actions\\coverActions.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\consts\\colors.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\MyButton.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\DocViewer.js",[],["259","260"],"C:\\Projects\\CvManager\\cv-manager\\src\\actions\\optionsActions.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\optionsReducer.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\styles\\panelStyle.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\TemplatePanel\\TemplateForm.js",["261","262"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport MyButton from '../common/MyButton.js';\r\nimport FormSelect from '../common/FormSelect.js';\r\nimport FormInput from '../common/FormInput.js';\r\nimport { getAllCvs } from '../../actions/cvActions.js';\r\nimport { getAllCovers } from '../../actions/coverActions.js';\r\nimport { MAX_NAME_LENGTH, MAX_DESCRIPTION_LENGTH } from '../../consts/measures.js';\r\nimport FormTitle from '../common/FormTitle.js';\r\nimport formStyle from '../../styles/formStyle.js';\r\nimport ConfirmDialog from '../common/ConfirmDialog.js';\r\nimport { NEW_MODE } from '../../consts/strings.js';\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required('Name is required field')\r\n    .test('len', `Must be less than ${MAX_NAME_LENGTH} characters`, (val) => val.length <= MAX_NAME_LENGTH),\r\n  description: yup\r\n    .string()\r\n    .test(\r\n      'len',\r\n      `Must be less than ${MAX_DESCRIPTION_LENGTH} characters`,\r\n      (val) => val.length <= MAX_DESCRIPTION_LENGTH\r\n    ),\r\n  cvSelect: yup.string().required('Please select cv'),\r\n  coverSelect: yup.string().required('Please select cover'),\r\n});\r\n\r\nconst TemplateForm = ({\r\n  initName = '',\r\n  initDescription = '',\r\n  initCvId = '',\r\n  initCoverId = '',\r\n  mode = NEW_MODE,\r\n  saveTemplate,\r\n  closeForm,\r\n  classes,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState(null);\r\n  const cvList = useSelector((state) => state.cv.items.map((item) => ({ id: item.id, name: item.name })));\r\n  const coverList = useSelector((state) => state.cover.items.map((item) => ({ id: item.id, name: item.name })));\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const formObject = useForm({\r\n    mode: 'all',\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const { handleSubmit, reset, errors, clearErrors } = formObject;\r\n\r\n  const onSubmit = (formData) => {\r\n    if (mode === NEW_MODE) {\r\n      saveTemplate(formData.name, formData.description, formData.cvSelect, formData.coverSelect);\r\n      return;\r\n    }\r\n    setData({\r\n      name: formData.name,\r\n      description: formData.description,\r\n      cv: formData.cvSelect,\r\n      cover: formData.coverSelect,\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleDialogOk = () => {\r\n    saveTemplate(data.name, data.description, data.cv, data.cover);\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleDialogCancel = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    reset({ name: '', description: '', cvSelect: '', coverSelect: '' });\r\n    clearErrors();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    closeForm();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (cvList.length === 0) dispatch(getAllCvs());\r\n    if (coverList.length === 0) dispatch(getAllCovers());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    reset({ name: initName, description: initDescription, cvSelect: initCvId, coverSelect: initCoverId });\r\n  }, [initName, initCvId, initDescription, initCoverId]);\r\n\r\n  return (\r\n    <FormProvider {...formObject}>\r\n      <form className={classes.root} onSubmit={handleSubmit(onSubmit)} onReset={handleReset}>\r\n        <FormTitle mode={mode} label='template' handleClose={handleClose} />\r\n        <FormInput name='name' label='Name' required={true} defaultValue={initName} errorobj={errors} />\r\n        <FormInput\r\n          name='description'\r\n          label='Description'\r\n          defaultValue={initDescription}\r\n          required={false}\r\n          errorobj={errors}\r\n        />\r\n        <FormSelect\r\n          name='cvSelect'\r\n          label='Cv'\r\n          options={cvList}\r\n          defaultValue={initCvId}\r\n          required={true}\r\n          errorobj={errors}\r\n        />\r\n        <FormSelect\r\n          name='coverSelect'\r\n          label='Cover'\r\n          options={coverList}\r\n          defaultValue={initCoverId}\r\n          required={true}\r\n          errorobj={errors}\r\n        />\r\n        <div className={classes.submitContainer}>\r\n          <MyButton name='Save' theme='dark' type='submit' />\r\n          <MyButton name='Reset' theme='dark' type='reset' />\r\n        </div>\r\n      </form>\r\n      <ConfirmDialog\r\n        open={openDialog}\r\n        dialogTitle='Update template?'\r\n        dialogText='All previus data will be updated'\r\n        handleOk={handleDialogOk}\r\n        handleClose={handleDialogCancel}\r\n      />\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default withStyles(formStyle)(TemplateForm);\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\actions\\templateActions.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormSelect.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormInput.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\CvPanel\\CvForm.js",["263"],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FileInput.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\consts\\structs.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormTitle.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormFileInput.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\CoverPanel\\CoverForm.js",["264"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport MyButton from '../common/MyButton.js';\r\nimport { FormInput } from '../common/FormInput.js';\r\nimport { MAX_NAME_LENGTH } from '../../consts/measures.js';\r\nimport FormTitle from '../common/FormTitle.js';\r\nimport formStyle from '../../styles/formStyle.js';\r\nimport { EditorState } from 'draft-js';\r\nimport { RichTextEditor } from '../common/RichTextEditor.js';\r\nimport { convertJsonToEditorContent, convertEditorContentToJson } from '../../utills/editorUtils.js';\r\nimport ConfirmDialog from '../common/ConfirmDialog.js';\r\nimport BiSwitch from '../common/BiSwitch.js';\r\nimport { RTL, LTR, NEW_MODE } from '../../consts/strings.js';\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required('Name is required field')\r\n    .test('len', `Must be less than ${MAX_NAME_LENGTH} characters`, (val) => val.length <= MAX_NAME_LENGTH),\r\n});\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  editor: {\r\n    width: '100%',\r\n  },\r\n  directionSwitch: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n  directionSwitchLabel: {\r\n    padding: '5px',\r\n    color: 'white',\r\n  },\r\n}));\r\n\r\nconst CoverForm = ({\r\n  initName = '',\r\n  initContent = '',\r\n  initDirection = LTR,\r\n  mode = NEW_MODE,\r\n  saveCover,\r\n  closeForm,\r\n  classes,\r\n}) => {\r\n  const myClasses = useStyles();\r\n  const [data, setData] = useState(null);\r\n  const [initEditorContent, setInitEditorContent] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [textDirectionLtr, setTextDirectionLtr] = useState(true);\r\n\r\n  const formObject = useForm({\r\n    mode: 'all',\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const { handleSubmit, reset, errors, clearErrors } = formObject;\r\n\r\n  const onSubmit = (formData) => {\r\n    if (mode === NEW_MODE) {\r\n      saveCover(formData.name, convertEditorContentToJson(content), textDirectionLtr ? LTR : RTL);\r\n      return;\r\n    }\r\n    setData({\r\n      name: formData.name,\r\n      content: convertEditorContentToJson(content),\r\n      direction: textDirectionLtr ? LTR : RTL,\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    closeForm();\r\n  };\r\n\r\n  const handleDialogOk = () => {\r\n    saveCover(data.name, data.content, data.direction);\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleDialogCancel = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    reset({ name: '' });\r\n    clearErrors();\r\n    setTextDirectionLtr(true);\r\n    setInitEditorContent(EditorState.createEmpty().getCurrentContent());\r\n  };\r\n\r\n  const handleChangeDirection = () => {\r\n    setTextDirectionLtr(!textDirectionLtr);\r\n  };\r\n\r\n  const onContentChanged = (newContent) => {\r\n    setContent(newContent);\r\n  };\r\n\r\n  useEffect(() => {\r\n    reset({ name: initName });\r\n  }, [initName]);\r\n\r\n  useEffect(() => {\r\n    if (initContent !== '') {\r\n      setInitEditorContent(convertJsonToEditorContent(initContent));\r\n    }\r\n  }, [initContent]);\r\n\r\n  useEffect(() => {\r\n    setTextDirectionLtr(initDirection === LTR);\r\n  }, [initDirection]);\r\n\r\n  useEffect(() => {\r\n    setContent(initEditorContent);\r\n  }, [initEditorContent]);\r\n\r\n  return (\r\n    <FormProvider {...formObject}>\r\n      <form className={classes.root} onSubmit={handleSubmit(onSubmit)} onReset={handleReset}>\r\n        <FormTitle mode={mode} label='cover' handleClose={handleClose} />\r\n        {/* <FormInputUnControlled name='name' required={true} label='Name' onChange={onNameChange} value={name} /> */}\r\n        <FormInput name='name' label='Name' required={true} defaultValue={initName} errorobj={errors} />\r\n        <div className={myClasses.editor}>\r\n          <RichTextEditor\r\n            initContent={initEditorContent}\r\n            direction={textDirectionLtr ? LTR : RTL}\r\n            onContentChange={onContentChanged}\r\n          />\r\n          <BiSwitch\r\n            classes={{ root: myClasses.directionSwitch, label: myClasses.directionSwitchLabel }}\r\n            labelLeft={LTR}\r\n            labelRight={RTL}\r\n            checked={textDirectionLtr}\r\n            handleChange={handleChangeDirection}\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.submitContainer}>\r\n          <MyButton name='Save' theme='dark' type='submit' />\r\n          <MyButton name='Reset' theme='dark' type='reset' />\r\n        </div>\r\n      </form>\r\n      <ConfirmDialog\r\n        open={openDialog}\r\n        dialogTitle='Update cover?'\r\n        dialogText='All previus data will be updated'\r\n        handleOk={handleDialogOk}\r\n        handleClose={handleDialogCancel}\r\n      />\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default withStyles(formStyle)(CoverForm);\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\DocListItem.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\styles\\formStyle.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\SendMailPage\\SendMailPage.js",["265","266","267","268","269"],"import React, { useState, useEffect } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport Form from './SendForm.js';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport panelStyle from '../../styles/panelStyle.js';\r\nimport Container from '@material-ui/core/Container';\r\nimport clsx from 'clsx';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport MyButton from '../common/MyButton.js';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Editor, EditorState } from 'draft-js';\r\nimport { RichTextEditor, getBlockStyle } from '../common/RichTextEditor.js';\r\nimport { convertJsonToEditorContent } from '../../utills/editorUtils.js';\r\nimport MySwitch from '../common/MySwitch.js';\r\nimport BiSwitch from '../common/BiSwitch.js';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '../common/Alert.js';\r\nimport { setLoadingOn } from '../../actions/optionsActions.js';\r\nimport { sendEmailRequest, getData, setSended } from '../../actions/emailActions.js';\r\nimport { makeHtml } from '../../utills/html.js';\r\nimport { RTL, LTR } from '../../consts/strings.js';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\nconst useStyles = makeStyles({\r\n  contentContainer: {\r\n    width: '100%',\r\n    '& .MuiPaper-root ': {\r\n      minHeight: '400px',\r\n      padding: '20px',\r\n    },\r\n  },\r\n  editorBlock: {},\r\n  linksBlock: {\r\n    marginTop: '40px',\r\n    '& a': {\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n  mailField: {\r\n    padding: '2px 0',\r\n    fontSize: '20px',\r\n    fontWeight: '500',\r\n    '& span': {\r\n      paddingLeft: '10px',\r\n      fontWeight: '700',\r\n    },\r\n  },\r\n  body: {\r\n    paddingTop: '40px',\r\n  },\r\n  contentPaper: {\r\n    marginTop: '50px',\r\n  },\r\n  sendContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    marginBottom: '50px',\r\n  },\r\n  directionSwitch: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n  directionSwitchLabel: {\r\n    padding: '5px',\r\n  },\r\n});\r\n\r\nconst SendMailPage = ({ classes }) => {\r\n  const myClasses = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState(null);\r\n  const [showBody, setShowBody] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [initContentState, setInitContentState] = useState('');\r\n  const [contentState, setContentState] = useState('');\r\n  const [isSending, setIsSending] = useState(false);\r\n  const isSended = useSelector((state) => state.email.isSended);\r\n  const selectedCv = useSelector((state) => state.email.selectedCv, shallowEqual);\r\n  const selectedCover = useSelector((state) => state.email.selectedCover, shallowEqual);\r\n  const isSidePanelOpen = useSelector((state) => state.options.isSidePanelOpen);\r\n  const isLoading = useSelector((state) => state.options.isLoading);\r\n  const showError = useSelector((state) => state.options.showError);\r\n  const [showSnackbar, setShowSnackbar] = useState(false);\r\n  const userEmailAdress = useSelector((state) => state.user.user.email);\r\n  const [textDirectionLtr, setTextDirectionLtr] = useState(true);\r\n\r\n  const makeMail = (data) => {\r\n    dispatch(setLoadingOn);\r\n    setData(data);\r\n  };\r\n\r\n  const sendMail = () => {\r\n    setIsSending(true);\r\n  };\r\n\r\n  const editMail = (e) => {\r\n    setEditMode(!editMode);\r\n  };\r\n\r\n  const onContentChanged = (newContentState) => {\r\n    setContentState(newContentState);\r\n  };\r\n\r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setShowSnackbar(false);\r\n  };\r\n\r\n  const handleChangeDirection = () => {\r\n    setTextDirectionLtr(!textDirectionLtr);\r\n  };\r\n\r\n  useEffect(() => {\r\n    data && dispatch(getData(data.cv, data.cover));\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (isSending) {\r\n      dispatch(\r\n        sendEmailRequest({\r\n          to: data.to,\r\n          from: data.from,\r\n          subject: data.subject,\r\n          file: selectedCv.file,\r\n          cover: makeHtml(contentState, textDirectionLtr ? LTR : RTL, userEmailAdress),\r\n        })\r\n      );\r\n    }\r\n  }, [isSending]);\r\n\r\n  useEffect(() => {\r\n    if (selectedCover !== null && selectedCv !== null && data !== null) {\r\n      setContentState(convertJsonToEditorContent(selectedCover.content));\r\n      setInitContentState(convertJsonToEditorContent(selectedCover.content));\r\n      setTextDirectionLtr(selectedCover.direction === 'LTR');\r\n      setShowBody(true);\r\n    }\r\n  }, [selectedCover, selectedCv]);\r\n\r\n  useEffect(() => {\r\n    if (editMode) {\r\n      setInitContentState(contentState);\r\n    }\r\n  }, [editMode]);\r\n\r\n  useEffect(() => {\r\n    //on first enter isSending = false so message not fired\r\n    if (isSended && isSending) {\r\n      setIsSending(false);\r\n      dispatch(setSended(false));\r\n      setShowSnackbar(true);\r\n      setShowBody(false); //TODO uncomment, commented for test\r\n    }\r\n  }, [isSended]);\r\n\r\n  return (\r\n    <section\r\n      className={clsx(classes.root, {\r\n        [classes.expanded]: isSidePanelOpen,\r\n      })}\r\n    >\r\n      <Container>\r\n        <Form makeMail={makeMail} />\r\n        <div className={myClasses.contentContainer}>\r\n          <div className={clsx(classes.loading, { [classes.hide]: !isLoading })}>\r\n            {!isSending && <CircularProgress />}\r\n          </div>\r\n          {showBody && (\r\n            <div>\r\n              <Paper className={myClasses.contentPaper}>\r\n                <div className={myClasses.mailField}>\r\n                  To:<span>{data.to}</span>\r\n                </div>\r\n                <Divider />\r\n                <div className={myClasses.mailField}>\r\n                  From: <span>{data.from}</span>\r\n                </div>\r\n                <Divider />\r\n                <div className={myClasses.mailField}>\r\n                  Subject: <span>{data.subject}</span>\r\n                </div>\r\n                <Divider />\r\n                <div className={myClasses.mailField}>\r\n                  Attachment: <span>{selectedCv.name + '.' + selectedCv.type}</span>\r\n                </div>\r\n                <Divider />\r\n                <div className={myClasses.body}>\r\n                  <div className={myClasses.editorBlock}>\r\n                    {editMode ? (\r\n                      <div>\r\n                        <RichTextEditor\r\n                          initContent={initContentState}\r\n                          direction={textDirectionLtr ? LTR : RTL}\r\n                          onContentChange={onContentChanged}\r\n                        />\r\n                        <BiSwitch\r\n                          classes={{ root: myClasses.directionSwitch, label: myClasses.directionSwitchLabel }}\r\n                          labelLeft={LTR}\r\n                          labelRight={RTL}\r\n                          checked={textDirectionLtr}\r\n                          handleChange={handleChangeDirection}\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <Editor\r\n                        blockStyleFn={getBlockStyle}\r\n                        editorState={EditorState.createWithContent(contentState)}\r\n                        textAlignment={selectedCover.direction === 'LTR' ? 'left' : 'right'}\r\n                        readOnly={true}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </Paper>\r\n              <MySwitch label='edit' name='edit' value={editMode} handleChange={editMail} />\r\n              <div className={myClasses.sendContainer}>\r\n                <MyButton disabled={isLoading} name='Send' theme='light' type='button' onClick={sendMail} />\r\n                <CircularProgress className={clsx(classes.loading, { [classes.hide]: !isLoading })} />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* <div style={{ color: 'white', direction: 'rtl' }}>אני STAS טרסנקו</div> */}\r\n      </Container>\r\n      <Snackbar\r\n        className={classes.snackbar}\r\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n        open={showSnackbar}\r\n        autoHideDuration={4000}\r\n        onClose={handleCloseSnackbar}\r\n      >\r\n        <Alert onClose={handleCloseSnackbar} severity={showError ? 'error' : 'success'}>\r\n          {showError ? 'Failed to send email.Try again' : 'Email sent successfully'}\r\n        </Alert>\r\n      </Snackbar>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withStyles(panelStyle)(SendMailPage);\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\SendMailPage\\SendForm.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\RichTextEditor.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\userReducer.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\utills\\editorUtils.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\utills\\html.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\MyCheckBox.js",["270","271","272","273","274","275","276","277"],"import React, { useState, useEffect } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { LIGHT_BLUE, DARK_BLUE, LIGHT, DARK, RED_ERROR, LIME } from '../../consts/colors.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n    margin: 0,\r\n    padding: 0,\r\n    '& .MuiFormControlLabel-root': {\r\n      '& .MuiCheckbox-root': {\r\n        color: 'white',\r\n        '& svg': {\r\n          fontSize: '32px',\r\n        },\r\n      },\r\n    },\r\n    '& span': {\r\n      color: 'white',\r\n      fontSize: '20px',\r\n    },\r\n  },\r\n}));\r\n\r\nexport const MyCheckBox = ({ label, name, value = false, handleChange }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <FormControl className={classes.root} name={name}>\r\n      <FormControlLabel\r\n        value='edit'\r\n        control={<Checkbox checked={value} onChange={handleChange} />}\r\n        label={label}\r\n        labelPlacement='start'\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default MyCheckBox;\r\n","C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\MyToolTip.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\MySwitch.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\HomePage\\HomePage.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\HorizontalCard.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\reducers\\emailReducer.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\actions\\emailActions.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\SignUp\\SignUp.js",["278"],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\Login\\Login.js",["279"],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\FormInputLogin.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\actions\\userActions.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\utills\\cookies.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\PrivateRoute.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\ConfirmDialog.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\Alert.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\consts\\strings.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\components\\common\\BiSwitch.js",[],"C:\\Projects\\CvManager\\cv-manager\\src\\utills\\actionsUtils.js",[],{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","severity":1,"message":"285","line":21,"column":6,"nodeType":"286","endLine":21,"endColumn":8,"suggestions":"287"},{"ruleId":"288","severity":1,"message":"289","line":34,"column":5,"nodeType":"290","messageId":"291","endLine":34,"endColumn":15},{"ruleId":"288","severity":1,"message":"289","line":35,"column":5,"nodeType":"290","messageId":"291","endLine":35,"endColumn":15},{"ruleId":"284","severity":1,"message":"285","line":86,"column":6,"nodeType":"286","endLine":86,"endColumn":8,"suggestions":"292"},{"ruleId":"284","severity":1,"message":"293","line":96,"column":6,"nodeType":"286","endLine":96,"endColumn":20,"suggestions":"294"},{"ruleId":"284","severity":1,"message":"295","line":101,"column":6,"nodeType":"286","endLine":101,"endColumn":17,"suggestions":"296"},{"ruleId":"284","severity":1,"message":"285","line":87,"column":6,"nodeType":"286","endLine":87,"endColumn":8,"suggestions":"297"},{"ruleId":"284","severity":1,"message":"293","line":97,"column":6,"nodeType":"286","endLine":97,"endColumn":20,"suggestions":"298"},{"ruleId":"284","severity":1,"message":"295","line":102,"column":6,"nodeType":"286","endLine":102,"endColumn":17,"suggestions":"299"},{"ruleId":"284","severity":1,"message":"285","line":86,"column":6,"nodeType":"286","endLine":86,"endColumn":8,"suggestions":"300"},{"ruleId":"284","severity":1,"message":"293","line":96,"column":6,"nodeType":"286","endLine":96,"endColumn":20,"suggestions":"301"},{"ruleId":"284","severity":1,"message":"295","line":101,"column":6,"nodeType":"286","endLine":101,"endColumn":17,"suggestions":"302"},{"ruleId":"280","replacedBy":"303"},{"ruleId":"282","replacedBy":"304"},{"ruleId":"284","severity":1,"message":"305","line":92,"column":6,"nodeType":"286","endLine":92,"endColumn":8,"suggestions":"306"},{"ruleId":"284","severity":1,"message":"307","line":96,"column":6,"nodeType":"286","endLine":96,"endColumn":56,"suggestions":"308"},{"ruleId":"284","severity":1,"message":"309","line":116,"column":6,"nodeType":"286","endLine":116,"endColumn":16,"suggestions":"310"},{"ruleId":"284","severity":1,"message":"307","line":106,"column":6,"nodeType":"286","endLine":106,"endColumn":16,"suggestions":"311"},{"ruleId":"284","severity":1,"message":"285","line":122,"column":6,"nodeType":"286","endLine":122,"endColumn":12,"suggestions":"312"},{"ruleId":"284","severity":1,"message":"313","line":136,"column":6,"nodeType":"286","endLine":136,"endColumn":17,"suggestions":"314"},{"ruleId":"284","severity":1,"message":"315","line":145,"column":6,"nodeType":"286","endLine":145,"endColumn":33,"suggestions":"316"},{"ruleId":"284","severity":1,"message":"317","line":151,"column":6,"nodeType":"286","endLine":151,"endColumn":16,"suggestions":"318"},{"ruleId":"284","severity":1,"message":"319","line":161,"column":6,"nodeType":"286","endLine":161,"endColumn":16,"suggestions":"320"},{"ruleId":"321","severity":1,"message":"322","line":1,"column":17,"nodeType":"323","messageId":"324","endLine":1,"endColumn":25},{"ruleId":"321","severity":1,"message":"325","line":1,"column":27,"nodeType":"323","messageId":"324","endLine":1,"endColumn":36},{"ruleId":"321","severity":1,"message":"326","line":6,"column":10,"nodeType":"323","messageId":"324","endLine":6,"endColumn":20},{"ruleId":"321","severity":1,"message":"327","line":6,"column":22,"nodeType":"323","messageId":"324","endLine":6,"endColumn":31},{"ruleId":"321","severity":1,"message":"328","line":6,"column":33,"nodeType":"323","messageId":"324","endLine":6,"endColumn":38},{"ruleId":"321","severity":1,"message":"329","line":6,"column":40,"nodeType":"323","messageId":"324","endLine":6,"endColumn":44},{"ruleId":"321","severity":1,"message":"330","line":6,"column":46,"nodeType":"323","messageId":"324","endLine":6,"endColumn":55},{"ruleId":"321","severity":1,"message":"331","line":6,"column":57,"nodeType":"323","messageId":"324","endLine":6,"endColumn":61},{"ruleId":"284","severity":1,"message":"332","line":128,"column":6,"nodeType":"286","endLine":128,"endColumn":18,"suggestions":"333"},{"ruleId":"284","severity":1,"message":"332","line":116,"column":6,"nodeType":"286","endLine":116,"endColumn":18,"suggestions":"334"},"no-native-reassign",["335"],"no-negated-in-lhs",["336"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["337"],"no-dupe-keys","Duplicate key 'background'.","ObjectExpression","unexpected",["338"],"React Hook useEffect has a missing dependency: 'isEditMode'. Either include it or remove the dependency array.",["339"],"React Hook useEffect has missing dependencies: 'dispatch', 'showSnackbar', and 'successResponse'. Either include them or remove the dependency array.",["340"],["341"],["342"],["343"],["344"],["345"],["346"],["335"],["336"],"React Hook useEffect has missing dependencies: 'coverList.length', 'cvList.length', and 'dispatch'. Either include them or remove the dependency array.",["347"],"React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.",["348"],"React Hook useEffect has missing dependencies: 'initDescription', 'initName', and 'reset'. Either include them or remove the dependency array.",["349"],["350"],["351"],"React Hook useEffect has missing dependencies: 'contentState', 'data.from', 'data.subject', 'data.to', 'dispatch', 'selectedCv.file', 'textDirectionLtr', and 'userEmailAdress'. Either include them or remove the dependency array.",["352"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["353"],"React Hook useEffect has a missing dependency: 'contentState'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setInitContentState' needs the current value of 'contentState'.",["354"],"React Hook useEffect has missing dependencies: 'dispatch' and 'isSending'. Either include them or remove the dependency array.",["355"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'LIGHT_BLUE' is defined but never used.","'DARK_BLUE' is defined but never used.","'LIGHT' is defined but never used.","'DARK' is defined but never used.","'RED_ERROR' is defined but never used.","'LIME' is defined but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["356"],["357"],"no-global-assign","no-unsafe-negation",{"desc":"358","fix":"359"},{"desc":"358","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"358","fix":"365"},{"desc":"361","fix":"366"},{"desc":"363","fix":"367"},{"desc":"358","fix":"368"},{"desc":"361","fix":"369"},{"desc":"363","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"389","fix":"391"},"Update the dependencies array to be: [dispatch]",{"range":"392","text":"393"},{"range":"394","text":"393"},"Update the dependencies array to be: [isEditMode, requestError]",{"range":"395","text":"396"},"Update the dependencies array to be: [dispatch, showError, showSnackbar, successResponse]",{"range":"397","text":"398"},{"range":"399","text":"393"},{"range":"400","text":"396"},{"range":"401","text":"398"},{"range":"402","text":"393"},{"range":"403","text":"396"},{"range":"404","text":"398"},"Update the dependencies array to be: [coverList.length, cvList.length, dispatch]",{"range":"405","text":"406"},"Update the dependencies array to be: [initName, initCvId, initDescription, initCoverId, reset]",{"range":"407","text":"408"},"Update the dependencies array to be: [initDescription, initFile, initName, reset]",{"range":"409","text":"410"},"Update the dependencies array to be: [initName, reset]",{"range":"411","text":"412"},"Update the dependencies array to be: [data, dispatch]",{"range":"413","text":"414"},"Update the dependencies array to be: [contentState, data.from, data.subject, data.to, dispatch, isSending, selectedCv.file, textDirectionLtr, userEmailAdress]",{"range":"415","text":"416"},"Update the dependencies array to be: [data, selectedCover, selectedCv]",{"range":"417","text":"418"},"Update the dependencies array to be: [contentState, editMode]",{"range":"419","text":"420"},"Update the dependencies array to be: [dispatch, isSended, isSending]",{"range":"421","text":"422"},"Update the dependencies array to be: [isLoggedIn, props.history]",{"range":"423","text":"424"},{"range":"425","text":"424"},[845,847],"[dispatch]",[3026,3028],[3229,3243],"[isEditMode, requestError]",[3384,3395],"[dispatch, showError, showSnackbar, successResponse]",[3124,3126],[3327,3341],[3482,3493],[3076,3078],[3279,3293],[3434,3445],[3024,3026],"[coverList.length, cvList.length, dispatch]",[3166,3216],"[initName, initCvId, initDescription, initCoverId, reset]",[3961,3971],"[initDescription, initFile, initName, reset]",[3088,3098],"[initName, reset]",[3871,3877],"[data, dispatch]",[4214,4225],"[contentState, data.from, data.subject, data.to, dispatch, isSending, selectedCv.file, textDirectionLtr, userEmailAdress]",[4582,4609],"[data, selectedCover, selectedCv]",[4711,4721],"[contentState, editMode]",[5012,5022],"[dispatch, isSended, isSending]",[3833,3845],"[isLoggedIn, props.history]",[3456,3468]]